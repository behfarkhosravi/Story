{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/story.js","../../src/Header.svelte","../../node_modules/@supabase/functions-js/dist/module/types.js","../../node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","../../node_modules/@supabase/functions-js/dist/module/helper.js","../../node_modules/@supabase/node-fetch/browser.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js","../../node_modules/@supabase/postgrest-js/dist/cjs/index.js","../../node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs","../../node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js","../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/storage-js/dist/module/lib/errors.js","../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/auth-js/dist/module/lib/version.js","../../node_modules/@supabase/auth-js/dist/module/lib/constants.js","../../node_modules/@supabase/auth-js/dist/module/lib/errors.js","../../node_modules/@supabase/auth-js/dist/module/lib/base64url.js","../../node_modules/@supabase/auth-js/dist/module/lib/helpers.js","../../node_modules/@supabase/auth-js/dist/module/lib/fetch.js","../../node_modules/@supabase/auth-js/dist/module/lib/types.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js","../../node_modules/@supabase/auth-js/dist/module/lib/local-storage.js","../../node_modules/@supabase/auth-js/dist/module/lib/locks.js","../../node_modules/@supabase/auth-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/auth-js/dist/module/AuthClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/supabaseClient.js","../../src/Chat.svelte","../../src/prompts.js","../../node_modules/@formkit/auto-animate/index.mjs","../../src/ApiKeyPrompt.svelte","../../src/App.svelte","../../src/config.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export const story = [\r\n  {\r\n    \"page\": 1,\r\n    \"content\": \"خانه همیشه ساکت بود، اما نه از آن سکوتی که آرامش‌بخش باشد. سنگین بود، مثل نفسی حبس‌شده، در انتظار شکستن چیزی. شیرین با قدم‌های محتاط در اتاق‌ها حرکت می‌کرد، پاهای برهنه‌اش روی چوب صیقلی سرد بود. هوا بوی هل و وعده‌های بیات‌شده می‌داد. هر روز صبح با همان برنامه بیدار می‌شد: چای دم می‌کرد، میز را می‌چید، و وقتی کاوه وارد می‌شد، لبخند می‌زد. چشمان کاوه، تیز مثل سنگ چخماق، او را نه برای عشق، که برای یافتن عیب‌هایش می‌کاوید. شیرین یاد گرفته بود خودش را کوچک کند، حضورش را کم‌رنگ و نامحسوس سازد. اما این اواخر، چیزی در درونش تکان می‌خورد - یک ناراحتی مبهم، مثل نخی که در گلویش گیر کرده باشد.\"\r\n  },\r\n  {\r\n    \"page\": 2,\r\n    \"content\": \"این ناراحتی را در لحظات کوچک حس می‌کرد. وقتی درباره‌ی روزش بیش از حد طولانی حرف می‌زد، لحن کاوه خشک می‌شد. وقتی ظرف‌هایی را که چیده بود، جابجا می‌کرد، انگار انتخاب‌هایش هیچ‌وقت کاملاً درست نبودند. یک بار به شوخی همسایه با صدای بلند خندیده بود و سکوت کاوه بعد از آن، مثل یک تیغ بود. به خودش می‌گفت این‌ها چیزی نیست. فقط این است که عشق بعد از سال‌ها این‌گونه جا می‌افتد. اما شب‌ها، وقتی بیدار دراز می‌کشید، سکوت خانه به سینه‌اش فشار می‌آورد. به ترک‌های سقف خیره می‌شد و فکر می‌کرد کی ظاهر شده‌اند. تقصیر او بود؟ تقصیر کاوه بود؟ یا تقصیر فضایی بود که بینشان ایجاد شده بود، فضایی که سردتر و وسیع‌تر می‌شد؟\"\r\n  },\r\n  {\r\n    \"page\": 3,\r\n    \"content\": \"شیرین متوجه شد که بدنش هم دارد به او خیانت می‌کند. دست‌هایش هنگام ریختن چای او می‌لرزید. تصویرش در پنجره، نه از نظر جسمی، که از نظر روحی تکیده‌تر به نظر می‌رسید. وقتی کاوه از کنارش رد می‌شد، نفسش را حبس می‌کرد، منتظر یک کلمه، یک نگاه، هر چیزی که به او بگوید هنوز واقعی است. این ناراحتی بلند نبود - یک نجوا بود، سایه‌ای که در گوشه‌ی چشمش حرکت می‌کرد. هنوز نمی‌توانست نامی برایش پیدا کند، اما آنجا بود، مثل دود در هم می‌پیچید.\"\r\n  },\r\n  {\r\n    \"page\": 4,\r\n    \"content\": \"یک شب، وقتی برای شام جعفری خرد می‌کرد، چاقو از دستش در رفت و انگشتش را برید. قطره‌ای خون بیرون زد و او به آن خیره ماند. کاوه سرش را از روی گوشی‌اش بلند نکرد. با لحنی بی‌تفاوت گفت: «مواظب باش.» شیرین انگشتش را با پارچه‌ای بست، قلبش به شدت می‌تپید - نه از درد، که از آن وضوح ناگهانی: او داشت خون‌ریزی می‌کرد و کاوه نمی‌دید.\"\r\n  },\r\n  {\r\n    \"page\": 5,\r\n    \"content\": \"زخم انگشتش خوب شد، اما خاطره‌ی آن خون باقی ماند. دانه‌ی سرخی از شک بود که در زمین حاصلخیز ناراحتی‌اش کاشته شده بود. شیرین شروع به تماشای کاوه کرد، نه با نگاه نرم یک همسر، که با تمرکز تیز یک کارآگاه. می‌دید که لبخندهایش هرگز به چشمانش نمی‌رسد، که تعریف‌هایش همیشه با یک انتقاد ظریف همراه است. «این قورمه‌سبزی خوشمزه است، عزیزم،» می‌گفت، «اما شاید دفعه‌ی بعد کمی نمکش کمتر باشد.» کلمات بی‌ضرر بودند، اما مفهومشان همیشه آنجا بود: تو کاملاً خوب نیستی.\"\r\n  },\r\n  {\r\n    \"page\": 6,\r\n    \"content\": \"شروع به زیر سؤال بردن همه چیز کرد. زندگی‌ای که ساخته بودند، که زمانی مایه‌ی افتخارش بود، حالا مثل یک قفس به نظر می‌رسید. فرش‌های زیبا، مبلمان عتیقه، باغچه‌ی کاملاً مرتب - همه‌شان انتخاب‌ها و سلیقه‌های کاوه بودند. او فقط موافقت کرده بود، مشتاق راضی کردن، مشتاق همسر کامل بودن. اما «او» کجای این همه ماجرا بود؟ به دست‌هایش نگاه کرد، دست‌هایی که غذای او را می‌پخت و خانه‌اش را تمیز می‌کرد، و حس کرد دست‌های یک غریبه‌اند.\"\r\n  },\r\n  {\r\n    \"page\": 7,\r\n    \"content\": \"یک بعد از ظهر، وقتی کاوه سر کار بود، یک آلبوم عکس قدیمی در گوشه‌ای غبارآلود از اتاق زیر شیروانی پیدا کرد. مال قبل از آشنایی با کاوه بود. آنجا بود، با دوستانش می‌خندید، موهایش پریشان و رها، چشمانش پر از نوری که سال‌ها بود ندیده بود. آن موقع آدم دیگری بود، کسی که فضا را پر می‌کرد، کسی که نظر داشت، کسی که از بلند بودن صدایش نمی‌ترسید. تضاد آن‌قدر شدید بود که نفسش بند آمد. این زن در عکس که بود و چه بر سرش آمده بود؟\"\r\n  },\r\n  {\r\n    \"page\": 8,\r\n    \"content\": \"شک در سینه‌اش چرکین شد، آتشی که آرام می‌سوزاند. شروع به جواب دادن کرد، به شکل‌های کوچک. یک شب با صدایی که کمی می‌لرزید گفت: «من نمکش را دوست دارم.» چشمان کاوه تنگ شد و سکوتی که بعد از آن حاکم شد آن‌قدر سنگین بود که شیرین می‌توانست فشارش را حس کند. اما کوتاه نیامد. یک پیروزی کوچک بود، اما مال خودش بود.\"\r\n  },\r\n  {\r\n    \"page\": 9,\r\n    \"content\": \"خانه، که زمانی نماد زندگی مشترکشان بود، حالا مثل موزه‌ای از زندگی‌ای بود که دیگر نمی‌خواستش. سکوت دیگر فقط سنگین نبود؛ خفه‌کننده بود. شروع به دیدن ترک‌ها کرد، نه فقط در سقف، که در خودِ پایه‌های رابطه‌شان. آن نخ نامرئی دیگر فقط یک حس نبود؛ یک طناب بود و دور گردنش پیچیده بود.\"\r\n  },\r\n  {\r\n    \"page\": 10,\r\n    \"content\": \"یک شب خواب دید در جنگلی از آینه‌هاست. در هر انعکاس، نسخه‌ی متفاوتی از خودش را می‌دید: دختری که در عکس بود، زنی که حالا بود، و صدها امکان دیگر. با تپش قلب از خواب پرید. فهمید که خوابش یک پیام بود. راه‌های دیگری هم بود، زندگی‌های دیگری که می‌توانست داشته باشد. این فکر هم ترسناک بود و هم هیجان‌انگیز. برای اولین بار بعد از مدت‌ها، جرقه‌ای از امید را حس کرد.\"\r\n  },\r\n  {\r\n    \"page\": 11,\r\n    \"content\": \"ترس، همراهی سرد و دائمی بود. سر میز شام کنارش می‌نشست، مهمانی ساکت و ناخوانده. جرقه‌ی امید از خوابش به سرعت با واقعیت تلخ زندگی‌اش خاموش شد. فکر ترک کردن کاوه مثل کوهی بود، به طرز غیرممکنی بلند، که قله‌اش در مه فرو رفته بود. چه کار می‌کرد؟ کجا می‌رفت؟ کاوه او را آن‌قدر هوشمندانه و کامل منزوی کرده بود که کسی را برای کمک نداشت. دوستانش دور شده بودند، خسته از بهانه‌هایش برای اینکه چرا نمی‌تواند آن‌ها را ببیند. خانواده‌اش در شهر دیگری زندگی می‌کردند و او همیشه تصویری از یک زندگی کامل برایشان ترسیم کرده بود.\"\r\n  },\r\n  {\r\n    \"page\": 12,\r\n    \"content\": \"شروع به پنهان کردن افکارش کرد، آن‌ها را در اعماق وجودش دفن می‌کرد. ذهنش تبدیل به یک باغ مخفی شد، جایی که می‌توانست خودش باشد، دور از نگاه منتقد کاوه. یک دفتر خاطرات شروع کرد، کتابچه‌ای کوچک با جلد چرمی که زیر یک تخته‌ی لق در کمدش پنهان می‌کرد. در صفحاتش، ترس‌ها، شک‌ها و رویاهایش را می‌ریخت. عمل نوشتن یک رهایی بود، راهی برای صدا دادن به فریادهای خاموش در سرش.\"\r\n  },\r\n  {\r\n    \"page\": 13,\r\n    \"content\": \"تناقضات در رفتار کاوه آشکارتر شد. برایش هدایای گران‌قیمت می‌خرید، بعد او را به خاطر مادی‌گرا بودن سرزنش می‌کرد. به او می‌گفت دوستش دارد، بعد روزها با او قهر می‌کرد. او استاد پیام‌های متناقض بود، استاد برهم زدن تعادل او، استاد اینکه کاری کند که شیرین حس کند اوست که دیوانه است. با صدایی آغشته به نگرانی دروغین می‌گفت: «تو خیلی حساسی. داری خیال‌بافی می‌کنی.»\"\r\n  },\r\n  {\r\n    \"page\": 14,\r\n    \"content\": \"یک روز با یک دسته از گل‌های مورد علاقه‌اش، سوسن، به خانه آمد. با صدایی نرم مثل ابریشم گفت: «برای تو، عشقم.» شیرین می‌خواست باورش کند، آن را به عنوان یک حرکت عاشقانه ببیند. اما بعد رسید را روی پیشخوان آشپزخانه دید. از گلفروشی نزدیک دفترش بود، جایی که هیچ‌وقت نمی‌رفت. وحشتی سرد وجودش را فرا گرفت. گل‌ها برای او نبودند. پوششی بودند، راهی برای تسکین وجدان خودش درباره‌ی کاری که کرده بود.\"\r\n  },\r\n  {\r\n    \"page\": 15,\r\n    \"content\": \"با او روبرو نشد. ترس خیلی قوی بود. به جای آن، سوسن‌ها را در گلدان گذاشت و پژمرده شدن آرامشان را تماشا کرد، عطر شیرینشان یادآور تهوع‌آور دروغ‌هایش بود. سکوت خانه دیگر فقط سنگین نبود؛ تهدیدآمیز بود. سکوت یک شکارچی بود که طعمه‌اش را می‌پایید. و او طعمه بود.\"\r\n  },\r\n  {\r\n    \"page\": 16,\r\n    \"content\": \"نیاز به فرار تبدیل به دردی جسمی شد، گرسنگی‌ای که در شکمش می‌پیچید. با اعمال کوچک شورش شروع کرد، لحظات ریزی از آزادی که فقط مال خودش بود. از مسیر متفاوتی از فروشگاه به خانه می‌رفت، مسیری طولانی‌تر و خوش‌منظره‌تر که از پارکی که دوست داشت می‌گذشت. روی نیمکتی می‌نشست، زیر سایه‌ی یک درخت بلوط بزرگ، و به دنیای در حال گذر نگاه می‌کرد. برای چند دقیقه‌ی گران‌بها، او همسر کاوه نبود؛ فقط شیرین بود، زنی در یک پارک.\"\r\n  },\r\n  {\r\n    \"page\": 17,\r\n    \"content\": \"شروع به رفتن به کتابخانه کرد، جایی که سال‌ها بود نرفته بود. در میان قفسه‌ها گم می‌شد، احاطه‌شده با بوی آرامش‌بخش کتاب‌های قدیمی. حریصانه می‌خواند، هر چیزی که به دستش می‌رسید: رمان، شعر، روانشناسی. کتاب‌ها طناب نجاتی بودند، ارتباطی با دنیای خارج از خانه‌ی خفه‌کننده‌اش. به او یادآوری می‌کردند که راه‌های دیگری برای زندگی کردن، راه‌های دیگری برای بودن وجود دارد.\"\r\n  },\r\n  {\r\n    \"page\": 18,\r\n    \"content\": \"یک روز به کتابی درباره‌ی روابط سمی برخورد. همان‌طور که می‌خواند، شوکی از شناخت در وجودش دوید. توصیفات سوءاستفاده‌ی عاطفی، از بازی با روان، از کنترل - همه آنجا بود، آینه‌ای که زندگی خودش را منعکس می‌کرد. کتاب به آن وحشت بی‌نامی که سال‌ها او را آزار می‌داد، نامی داد. خیال‌بافی او نبود. واقعی بود.\"\r\n  },\r\n  {\r\n    \"page\": 19,\r\n    \"content\": \"فرارهای کوچکش جسورانه‌تر شد. در کلاس سفالگری ثبت‌نام کرد، کاری که همیشه دلش می‌خواست انجام دهد. به کاوه گفت به یک کلوپ کتاب‌خوانی می‌پیوندد. دروغ به طرز شگفت‌آوری آسان بود. کاوه آن‌قدر عادت کرده بود که او را بخشی از خودش بداند که سوالی نپرسید. کلاس سفالگری یک مکاشفه بود. حس کردن گِل در دستانش، عمل خلق کردن چیزی جدید، چیزی که مال خودش بود - مست‌کننده بود.\"\r\n  },\r\n  {\r\n    \"page\": 20,\r\n    \"content\": \"در کلاس سفالگری با زنی به نام لاله دوست شد. لاله همه چیزهایی بود که شیرین نبود: پر سر و صدا، با اعتماد به نفس، به شدت مستقل. ساعت‌ها بعد از کلاس با هم حرف می‌زدند، سر فنجان‌های چای در یک کافه‌ی کوچک و دنج. برای اولین بار بعد از سال‌ها، شیرین حس کرد دیده می‌شود، شنیده می‌شود، درک می‌شود. فرارهای کوچک دیگر فقط برای دور شدن از کاوه نبود؛ برای پیدا کردن راه بازگشت به خودش بود.\"\r\n  },\r\n  {\r\n    \"page\": 21,\r\n    \"content\": \"دوستی با لاله پنجره‌ای بود به زندگی‌ای که تقریباً فراموش کرده بود. داستان‌های لاله از سفرهایش، شغلش، علاقه‌هایش، شیرین را به یاد کسی می‌انداخت که قبلاً بود، کسی که زیر سال‌ها ترس و شک به خود دفن کرده بود. شروع به به یاد آوردن رویاهای خودش، جاه‌طلبی‌های خودش کرد. می‌خواست معلم شود، با بچه‌ها کار کند. خاطره آن‌قدر دور بود که انگار مال کس دیگری بود.\"\r\n  },\r\n  {\r\n    \"page\": 22,\r\n    \"content\": \"شروع به نگاه کردن به زندگی‌اش با چشمانی جدید کرد. خانه‌ی زیبا، که زمانی مایه‌ی افتخارش بود، حالا مثل یک قفس طلاکاری‌شده به نظر می‌رسید. لباس‌های گران‌قیمت، جواهرات، چیزهایی که کاوه برایش می‌خرید - آن‌ها هدیه‌های عشق نبودند؛ زنجیر بودند، او را به کاوه می‌بستند. او آزادی‌اش را با یک زندگی راحت معامله کرده بود، زندگی‌ای که آرام آرام او را خفه می‌کرد.\"\r\n  },\r\n  {\r\n    \"page\": 23,\r\n    \"content\": \"تصویر در آینه دیگر یک غریبه نبود. بارقه‌هایی از دختری که در عکس بود، دختری با موهای پریشان و چشمان درخشان را می‌دید. نور هنوز آنجا بود، جرقه‌ای ضعیف در تاریکی. شروع به پرورش آن کرد، به محافظت از آن، به دمیدن در آن تا شعله‌ور شود. شروع به آرایش موهایش به شکلی که قبلاً می‌کرد، به گوش دادن به موسیقی‌ای که دوست داشت، به پختن غذایی که از آن لذت می‌برد، حتی اگر کاوه دوست نداشت، کرد.\"\r\n  },\r\n  {\r\n    \"page\": 24,\r\n    \"content\": \"تغییرات کوچک بودند، تقریباً نامحسوس، اما مهم بودند. آن‌ها اعلامیه‌ی استقلال بودند، شورشی آرام علیه استبداد زندگی‌اش. او دیگر یک قربانی منفعل نبود؛ او یک بازمانده بود، زنی که آرام آرام، با زحمت، زندگی‌اش را پس می‌گرفت.\"\r\n  },\r\n  {\r\n    \"page\": 25,\r\n    \"content\": \"یک شب، وقتی برای خواب آماده می‌شد، در آینه به خودش نگاه کرد. برای اولین بار بعد از مدت‌ها، لبخند زد. لبخندی کوچک و مردد بود، اما واقعی بود. زن در آینه هم لبخند زد. سفر بازگشت به خودش آغاز شده بود.\"\r\n  },\r\n  {\r\n    \"page\": 26,\r\n    \"content\": \"دوستی با لاله یک کاتالیزور بود. لاله کبودی‌های روح شیرین را می‌دید، آن‌هایی که روی پوستش پیدا نبود. فشار نمی‌آورد، کنجکاوی نمی‌کرد، اما فضای امنی برای شیرین ایجاد می‌کرد تا حرف بزند، به اشتراک بگذارد، گره‌های درهم‌تنیده‌ی زندگی‌اش را باز کند. لاله با صدایی که مرهمی آرامش‌بخش بود می‌گفت: «تو قوی‌تر از آنی هستی که فکر می‌کنی.»\"\r\n  },\r\n  {\r\n    \"page\": 27,\r\n    \"content\": \"از طریق لاله، شیرین با زنان دیگری آشنا شد، زنانی که آن‌ها هم دوران سختی را گذرانده بودند. آن‌ها قبیله‌ای از بازماندگان بودند، دایره‌ای از قدرت. داستان‌ها، تلاش‌ها و پیروزی‌هایشان را به اشتراک می‌گذاشتند. برای اولین بار، شیرین احساس تنهایی نمی‌کرد. او بخشی از یک جامعه بود، خواهرانی از زنانی که می‌فهمیدند.\"\r\n  },\r\n  {\r\n    \"page\": 28,\r\n    \"content\": \"دوباره شروع به خواندن کرد، نه فقط برای لذت، بلکه برای دانش. درباره‌ی وابستگی متقابل، درباره‌ی خودشیفتگی، درباره‌ی تروما خواند. کلمات روی صفحه یک مکاشفه بودند، یک نقشه‌ی راه برای درک تجربه‌ی خودش. مه غلیظ سردرگمی شروع به کنار رفتن کرد و جای خود را به نور شفاف درک داد.\"\r\n  },\r\n  {\r\n    \"page\": 29,\r\n    \"content\": \"صدای درونی‌اش، که مدت‌ها بود نجوایی ضعیف بود، شروع به بلندتر شدن کرد. صدای منطق، شجاعت و عشق به خود بود. به او می‌گفت که لایق بهتری است، که شایسته‌ی زندگی‌ای آزاد از ترس و کنترل است. صدای زنی بود که قرار بود باشد.\"\r\n  },\r\n  {\r\n    \"page\": 30,\r\n    \"content\": \"قدرتی که جمع می‌کرد، یک انفجار ناگهانی از شجاعت نبود، بلکه تجمعی آرام و پیوسته از پیروزی‌های کوچک بود. قدرت یک رودخانه بود که راه خود را از میان صخره‌ها باز می‌کند، قطره به قطره. هنوز برای رفتن آماده نبود، اما داشت به آنجا می‌رسید. دانه‌ی شک ریشه دوانده بود و در حال تبدیل شدن به درختی از قدرت بود.\"\r\n  },\r\n  {\r\n    \"page\": 31,\r\n    \"content\": \"اولین جدایی برنامه‌ریزی‌شده نبود. یک عمل خودجوش برای حفظ خود بود. کاوه چند روزی بود که حالش به شدت بد بود، کلماتش مثل خنجر، سکوتش پتویی خفه‌کننده. هوای خانه از خشمی ناگفته سنگین بود. شیرین حس می‌کرد دارد غرق می‌شود.\"\r\n  },\r\n  {\r\n    \"page\": 32,\r\n    \"content\": \"یک روز صبح، بعد از یک دعوای به خصوص شدید، کاوه برای کار رفت و در را پشت سرش کوبید. صدا در خانه پیچید، یک ضربه‌ی نهایی و وحشیانه. شیرین در سکوت ایستاد، بدنش می‌لرزید. و بعد، چیزی در درونش شکست. یک کیف کوچک بست، دست‌هایش با اراده‌ای از خودشان حرکت می‌کردند. فکر نمی‌کرد، فقط عمل می‌کرد.\"\r\n  },\r\n  {\r\n    \"page\": 33,\r\n    \"content\": \"به خانه‌ی لاله رفت. لاله در را باز کرد و وحشت را در چشمان شیرین دید. هیچ سؤالی نپرسید. فقط او را در آغوشی گرم گرفت و گفت: «اینجا امنی.» سه روز، شیرین پیش لاله ماند، می‌خوابید، گریه می‌کرد، حرف می‌زد. تسکین آن‌قدر عظیم بود که تقریباً دردناک بود. فراموش کرده بود امن بودن چه حسی دارد.\"\r\n  },\r\n  {\r\n    \"page\": 34,\r\n    \"content\": \"اما بعد احساس گناه شروع به خزیدن کرد. صدای کاوه در سرش می‌پیچید، به او می‌گفت که زیاده‌روی می‌کند، که ناسپاس است، که بدون او هیچ است. شروع به زنگ زدن، پیام دادن، التماس کردن کرد که به خانه برگردد. قول داد تغییر کند، بهتر شود. کلمات مثل آواز سیرن‌ها بودند، او را به سواحل آشنای زندانش می‌کشاندند.\"\r\n  },\r\n  {\r\n    \"page\": 35,\r\n    \"content\": \"برگشت. لحظه‌ای که پایش را در خانه گذاشت، فهمید که اشتباه کرده است. هوا هنوز از همان سم قدیمی سنگین بود. کاوه چند روزی شیرین بود، بعد الگوهای قدیمی برگشتند. اولین جدایی یک شکست بود، اما بیهوده نبود. به او طعم آزادی را چشانده بود، نگاهی اجمالی به زندگی‌ای بدون ترس. و آن طعم چیزی بود که هرگز فراموش نمی‌کرد.\"\r\n  },\r\n  {\r\n    \"page\": 36,\r\n    \"content\": \"فرار ناموفق یک درس بود، نه یک شکست. حالا می‌فهمید که رفتن یک عمل واحد نیست، بلکه یک فرآیند است. نیاز به برنامه‌ریزی، آمادگی و اراده‌ای آهنین داشت. دانه‌ی شک به درختی از قدرت تبدیل شده بود و حالا وقت آن بود که قلعه‌ای دور آن بسازد.\"\r\n  },\r\n  {\r\n    \"page\": 37,\r\n    \"content\": \"شروع به آماده شدن در خفا کرد. یک حساب بانکی به نام خودش باز کرد و مبالغ کمی پول نقد از بودجه‌ی خانه به آن واریز می‌کرد. از مدارک مهمش کپی گرفت: پاسپورت، شناسنامه، مدارک تحصیلی. آن‌ها را در جایی امن پنهان کرد، جایی که کاوه هرگز پیدا نمی‌کرد.\"\r\n  },\r\n  {\r\n    \"page\": 38,\r\n    \"content\": \"شروع به ساختن یک شبکه‌ی حمایتی کرد. با دوستان قدیمی‌اش، آن‌هایی که از خود رانده بود، دوباره ارتباط برقرار کرد. به آن‌ها حقیقت را گفت، تمام حقیقت زشت را. آن‌ها شوکه شدند، اما قضاوت نکردند. به او جایی برای ماندن، شانه‌ای برای گریه کردن، دستی برای گرفتن پیشنهاد دادند.\"\r\n  },\r\n  {\r\n    \"page\": 39,\r\n    \"content\": \"به کلاس سفالگری‌اش ادامه داد، نه فقط برای خلاقیت، بلکه برای حس اجتماعی که به او می‌داد. لاله و دوستان دیگرش طناب نجات او بودند، لنگرهای او در دریای طوفانی زندگی‌اش. به او یادآوری می‌کردند که تنها نیست، که دیوانه نیست، که مقصر نیست.\"\r\n  },\r\n  {\r\n    \"page\": 40,\r\n    \"content\": \"نقشه‌ی پنهانی یک باغ مخفی بود، جایی از امید در چشم‌انداز بایر زندگی‌اش. قولی بود که به خودش داده بود، قولی برای یک شروع جدید. ترس هنوز آنجا بود، یک همراه دائمی، اما دیگر یک نیروی فلج‌کننده نبود. یک انگیزه بود، یادآوری چیزی که برایش می‌جنگید: زندگی‌اش.\"\r\n  },\r\n  {\r\n    \"page\": 41,\r\n    \"content\": \"شبی که رفت، شبی بی‌مهتاب بود. تاریکی یک شنل بود، یک سپر. کاوه برای یک سفر کاری خارج از شهر بود، فرصتی نادر که منتظرش بود. کیفش بسته بود، مدارکش در کیفش بود، قلبش در گلویش می‌تپید. مثل یک روح در خانه حرکت می‌کرد، برای آخرین بار به زندگی‌ای که پشت سر می‌گذاشت نگاه می‌کرد.\"\r\n  },\r\n  {\r\n    \"page\": 42,\r\n    \"content\": \"خانه ساکت بود، اما حالا نوع دیگری از سکوت بود. سکوت یک صحنه‌ی خالی، سکوت داستانی که به پایانش رسیده بود. حس غمی به او دست داد، نه برای زندگی‌ای که ترک می‌کرد، بلکه برای زنی که در آن زندگی کرده بود، زنی که سال‌ها در سکوت رنج برده بود.\"\r\n  },\r\n  {\r\n    \"page\": 43,\r\n    \"content\": \"یادداشتی روی میز آشپزخانه گذاشت، یک پیام ساده و دو خطی: «من می‌روم. دنبالم نگرد.» کلمات اعلام جنگ بودند، یک عمل نهایی سرکشی. از در بیرون رفت و به پشت سرش نگاه نکرد. ترس دستی سرد روی شانه‌اش بود، اما به راه رفتن ادامه داد.\"\r\n  },\r\n  {\r\n    \"page\": 44,\r\n    \"content\": \"با اتوبوس به شهر دیگری رفت، جایی که می‌توانست ناشناس باشد، جایی که می‌توانست از نو شروع کند. سفر تاری از تاریکی و نورهای لرزان بود. حس عجیبی از وحشت و هیجان داشت. او یک فراری بود، یک فراری، زنی در حال فرار از زندگی خودش.\"\r\n  },\r\n  {\r\n    \"page\": 45,\r\n    \"content\": \"اما او همچنین زنی در سفری به سوی آزادی بود. راه پیش رو نامشخص بود، اما برای اولین بار بعد از مدت‌ها، مال خودش بود. نخ نامرئی بالاخره بریده شده بود.\"\r\n  },\r\n  {\r\n    \"page\": 46,\r\n    \"content\": \"چند ماه اول سخت بود. یک آپارتمان کوچک در محله‌ای آرام و کاری به عنوان پیشخدمت در یک کافه‌ی محلی پیدا کرد. کار سخت بود، حقوق کم بود، اما مال خودش بود. او مستقل بود، خودکفا، زنی که سرنوشت خودش را در دست داشت.\"\r\n  },\r\n  {\r\n    \"page\": 47,\r\n    \"content\": \"شروع به بهبودی کرد. زخم‌ها عمیق بودند، اما کشنده نبودند. به تراپی رفت، به یک گروه حمایتی پیوست، به دیدن دوستانش ادامه داد. یاد گرفت دوباره اعتماد کند، دوباره دوست بدارد، از خودش شروع کرد. زن در آینه دیگر یک غریبه نبود؛ یک دوست بود.\"\r\n  },\r\n  {\r\n    \"page\": 48,\r\n    \"content\": \"یک روز، نامه‌ای از یک وکیل دریافت کرد. کاوه درخواست طلاق داده بود. نامه یک قطع نهایی و رسمی از پیوندهایی بود که سال‌ها او را بسته بود. حس رهایی، حس خاتمه به او دست داد. گذشته بالاخره در گذشته بود.\"\r\n  },\r\n  {\r\n    \"page\": 49,\r\n    \"content\": \"راز بی‌رحمی کاوه هرگز به طور کامل حل نشد، اما او به برخی پاسخ‌ها رسید. از یک آشنای مشترک فهمید که او در خانه‌ای پر از خشونت و سوءاستفاده بزرگ شده است. بی‌رحمی او بازتاب ارزش او نبود، بلکه فرافکنی شیاطین درونی خودش بود. این رفتارش را توجیه نمی‌کرد، اما به او کمک کرد تا آن را بفهمد، تا خشم و سرزنش را رها کند.\"\r\n  },\r\n  {\r\n    \"page\": 50,\r\n    \"content\": \"او دوباره متولد شد. زنی که در خانه‌ی خودش زندانی بود، حالا یک زن آزاد بود، زنی که نویسنده‌ی داستان خودش بود. سفر طولانی و پر زحمت بود، اما ارزشش را داشت. او آرامش پیدا کرده بود، خودش را پیدا کرده بود، زندگی‌ای را پیدا کرده بود که واقعاً مال خودش بود.\"\r\n  }\r\n]\r\n","<script>\r\n</script>\r\n\r\n<header>\r\n  <div class=\"header-left\" />\r\n  <div class=\"header-center\">\r\n    <h1>نخ نامرئی</h1>\r\n  </div>\r\n  <div class=\"header-right\">\r\n  </div>\r\n</header>\r\n\r\n<style>\r\n  header {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 1rem 1.5rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr auto 1fr;\r\n    align-items: center;\r\n    z-index: 20;\r\n  }\r\n\r\n  .header-center {\r\n    text-align: center;\r\n  }\r\n\r\n  .header-right {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2rem;\r\n    font-family: var(--font-display);\r\n    color: var(--font-color);\r\n    margin: 0;\r\n    font-weight: 600;\r\n  }\r\n</style>\r\n","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n// Define the enum for the 'region' property\nexport var FunctionRegion;\n(function (FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {}));\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, FunctionRegion, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, region = FunctionRegion.Any, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                // Add region as query parameter using URL API\n                const url = new URL(`${this.url}/${functionName}`);\n                if (region && region !== 'any') {\n                    _headers['x-region'] = region;\n                    url.searchParams.set('forceFunctionRegion', region);\n                }\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(url.toString(), {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'text/event-stream') {\n                    data = response;\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null, response };\n            }\n            catch (error) {\n                return {\n                    data: null,\n                    error,\n                    response: error instanceof FunctionsHttpError || error instanceof FunctionsRelayError\n                        ? error.context\n                        : undefined,\n                };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","export const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nclass PostgrestError extends Error {\n    constructor(context) {\n        super(context.message);\n        this.name = 'PostgrestError';\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports.default = PostgrestError;\n//# sourceMappingURL=PostgrestError.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"@supabase/node-fetch\"));\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nclass PostgrestBuilder {\n    constructor(builder) {\n        var _a, _b;\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = new Headers(builder.headers);\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = (_a = builder.shouldThrowOnError) !== null && _a !== void 0 ? _a : false;\n        this.signal = builder.signal;\n        this.isMaybeSingle = (_b = builder.isMaybeSingle) !== null && _b !== void 0 ? _b : false;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = node_fetch_1.default;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */\n    setHeader(name, value) {\n        this.headers = new Headers(this.headers);\n        this.headers.set(name, value);\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers.set('Accept-Profile', this.schema);\n        }\n        else {\n            this.headers.set('Content-Profile', this.schema);\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers.set('Content-Type', 'application/json');\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c, _d;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers.get('Accept') === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers.get('Accept') &&\n                        ((_a = this.headers.get('Accept')) === null || _a === void 0 ? void 0 : _a.includes('application/vnd.pgrst.plan+text'))) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_b = this.headers.get('Prefer')) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_e) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_d = error === null || error === void 0 ? void 0 : error.details) === null || _d === void 0 ? void 0 : _d.includes('0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        /* istanbul ignore next */\n        return this;\n    }\n    /**\n     * Override the type of the returned `data` field in the response.\n     *\n     * @typeParam NewResult - The new type to cast the response data to\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n     * @example\n     * ```typescript\n     * // Merge with existing types (default behavior)\n     * const query = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ custom_field: string }>()\n     *\n     * // Replace existing types completely\n     * const replaceQuery = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n     * ```\n     * @returns A PostgrestBuilder instance with the new type\n     */\n    overrideTypes() {\n        return this;\n    }\n}\nexports.default = PostgrestBuilder;\n//# sourceMappingURL=PostgrestBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        this.headers.append('Prefer', 'return=representation');\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers.set('Accept', 'application/vnd.pgrst.object+json');\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers.set('Accept', 'application/json');\n        }\n        else {\n            this.headers.set('Accept', 'application/vnd.pgrst.object+json');\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers.set('Accept', 'text/csv');\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers.set('Accept', 'application/geo+json');\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        var _a;\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers.get('Accept')) !== null && _a !== void 0 ? _a : 'application/json';\n        this.headers.set('Accept', `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`);\n        if (format === 'json') {\n            return this;\n        }\n        else {\n            return this;\n        }\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        this.headers.append('Prefer', 'tx=rollback');\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        return this;\n    }\n    /**\n     * Set the maximum number of rows that can be affected by the query.\n     * Only available in PostgREST v13+ and only works with PATCH and DELETE methods.\n     *\n     * @param value - The maximum number of rows that can be affected\n     */\n    maxAffected(value) {\n        this.headers.append('Prefer', 'handling=strict');\n        this.headers.append('Prefer', `max-affected=${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestTransformBuilder;\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = Array.from(new Set(values))\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestFilterBuilder;\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nclass PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = new Headers(headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        var _a;\n        const method = 'POST';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        if (!defaultToNull) {\n            this.headers.append('Prefer', `missing=default`);\n        }\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        var _a;\n        const method = 'POST';\n        this.headers.append('Prefer', `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`);\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        if (!defaultToNull) {\n            this.headers.append('Prefer', 'missing=default');\n        }\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        var _a;\n        const method = 'PATCH';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        var _a;\n        const method = 'DELETE';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n}\nexports.default = PostgrestQueryBuilder;\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nclass PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = new Headers(headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: new Headers(this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\n        var _a;\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head || get) {\n            method = head ? 'HEAD' : 'GET';\n            Object.entries(args)\n                // params with undefined value needs to be filtered out, otherwise it'll\n                // show up as `?param=undefined`\n                .filter(([_, value]) => value !== undefined)\n                // array values need special syntax\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n                .forEach(([name, value]) => {\n                url.searchParams.append(name, value);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = new Headers(this.headers);\n        if (count) {\n            headers.set('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n}\nexports.default = PostgrestClient;\n//# sourceMappingURL=PostgrestClient.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(require(\"./PostgrestClient\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports.default = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default,\n};\n//# sourceMappingURL=index.js.map","import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n","export class WebSocketFactory {\n    static detectEnvironment() {\n        var _a;\n        if (typeof WebSocket !== 'undefined') {\n            return { type: 'native', constructor: WebSocket };\n        }\n        if (typeof globalThis !== 'undefined' &&\n            typeof globalThis.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: globalThis.WebSocket };\n        }\n        if (typeof global !== 'undefined' &&\n            typeof global.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: global.WebSocket };\n        }\n        if (typeof globalThis !== 'undefined' &&\n            typeof globalThis.WebSocketPair !== 'undefined' &&\n            typeof globalThis.WebSocket === 'undefined') {\n            return {\n                type: 'cloudflare',\n                error: 'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',\n                workaround: 'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.',\n            };\n        }\n        if ((typeof globalThis !== 'undefined' && globalThis.EdgeRuntime) ||\n            (typeof navigator !== 'undefined' &&\n                ((_a = navigator.userAgent) === null || _a === void 0 ? void 0 : _a.includes('Vercel-Edge')))) {\n            return {\n                type: 'unsupported',\n                error: 'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',\n                workaround: 'Use serverless functions or a different deployment target for WebSocket functionality.',\n            };\n        }\n        if (typeof process !== 'undefined') {\n            // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n            const processVersions = process['versions'];\n            if (processVersions && processVersions['node']) {\n                // Remove 'v' prefix if present and parse the major version\n                const versionString = processVersions['node'];\n                const nodeVersion = parseInt(versionString.replace(/^v/, '').split('.')[0]);\n                // Node.js 22+ should have native WebSocket\n                if (nodeVersion >= 22) {\n                    // Check if native WebSocket is available (should be in Node.js 22+)\n                    if (typeof globalThis.WebSocket !== 'undefined') {\n                        return { type: 'native', constructor: globalThis.WebSocket };\n                    }\n                    // If not available, user needs to provide it\n                    return {\n                        type: 'unsupported',\n                        error: `Node.js ${nodeVersion} detected but native WebSocket not found.`,\n                        workaround: 'Provide a WebSocket implementation via the transport option.',\n                    };\n                }\n                // Node.js < 22 doesn't have native WebSocket\n                return {\n                    type: 'unsupported',\n                    error: `Node.js ${nodeVersion} detected without native WebSocket support.`,\n                    workaround: 'For Node.js < 22, install \"ws\" package and provide it via the transport option:\\n' +\n                        'import ws from \"ws\"\\n' +\n                        'new RealtimeClient(url, { transport: ws })',\n                };\n            }\n        }\n        return {\n            type: 'unsupported',\n            error: 'Unknown JavaScript runtime without WebSocket support.',\n            workaround: \"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\",\n        };\n    }\n    static getWebSocketConstructor() {\n        const env = this.detectEnvironment();\n        if (env.constructor) {\n            return env.constructor;\n        }\n        let errorMessage = env.error || 'WebSocket not supported in this environment.';\n        if (env.workaround) {\n            errorMessage += `\\n\\nSuggested solution: ${env.workaround}`;\n        }\n        throw new Error(errorMessage);\n    }\n    static createWebSocket(url, protocols) {\n        const WS = this.getWebSocketConstructor();\n        return new WS(url, protocols);\n    }\n    static isWebSocketSupported() {\n        try {\n            const env = this.detectEnvironment();\n            return env.type === 'native' || env.type === 'ws';\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n}\nexport default WebSocketFactory;\n//# sourceMappingURL=websocket-factory.js.map","export const version = '2.15.5';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_VERSION = `realtime-js/${version}`;\nexport const VSN = '1.0.0';\nexport const VERSION = version;\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport const MAX_PUSH_BUFFER_SIZE = 100;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\nexport const httpEndpointURL = (socketUrl) => {\n    let url = socketUrl;\n    url = url.replace(/^ws/i, 'http');\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\n    return url.replace(/\\/+$/, '') + '/api/broadcast';\n};\n//# sourceMappingURL=transformers.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n        this.timer = undefined;\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.enabled = false;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES, MAX_PUSH_BUFFER_SIZE, } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nimport { httpEndpointURL } from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES;\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, '');\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '', enabled: false },\n            private: false,\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('error', (reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n        this.broadcastEndpointURL = httpEndpointURL(this.socket.endPoint);\n        this.private = this.params.config.private || false;\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b, _c;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.state == CHANNEL_STATES.closed) {\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\n            const postgres_changes = (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [];\n            const presence_enabled = (!!this.bindings[REALTIME_LISTEN_TYPES.PRESENCE] &&\n                this.bindings[REALTIME_LISTEN_TYPES.PRESENCE].length > 0) ||\n                ((_c = this.params.config.presence) === null || _c === void 0 ? void 0 : _c.enabled) === true;\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence: Object.assign(Object.assign({}, presence), { enabled: presence_enabled }),\n                postgres_changes,\n                private: isPrivate,\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', async ({ postgres_changes }) => {\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            this.state = CHANNEL_STATES.errored;\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                this.state = CHANNEL_STATES.errored;\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload, opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'track',\n            payload,\n        }, opts.timeout || this.timeout);\n    }\n    async untrack(opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'untrack',\n        }, opts);\n    }\n    on(type, filter, callback) {\n        if (this.state === CHANNEL_STATES.joined &&\n            type === REALTIME_LISTEN_TYPES.PRESENCE) {\n            this.socket.log('channel', `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`);\n            this.unsubscribe().then(() => this.subscribe());\n        }\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */\n    async send(args, opts = {}) {\n        var _a, _b;\n        if (!this._canPush() && args.type === 'broadcast') {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue\n                ? `Bearer ${this.socket.accessTokenValue}`\n                : '';\n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private,\n                        },\n                    ],\n                }),\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? 'ok' : 'error';\n            }\n            catch (error) {\n                if (error.name === 'AbortError') {\n                    return 'timed out';\n                }\n                else {\n                    return 'error';\n                }\n            }\n        }\n        else {\n            return new Promise((resolve) => {\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve('ok');\n                }\n                push.receive('ok', () => resolve('ok'));\n                push.receive('error', () => resolve('error'));\n                push.receive('timeout', () => resolve('timed out'));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.joinPush.destroy();\n        let leavePush = null;\n        return new Promise((resolve) => {\n            leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        }).finally(() => {\n            leavePush === null || leavePush === void 0 ? void 0 : leavePush.destroy();\n        });\n    }\n    /**\n     * Teardown the channel.\n     *\n     * Destroys and stops related timers.\n     */\n    teardown() {\n        this.pushBuffer.forEach((push) => push.destroy());\n        this.pushBuffer = [];\n        this.rejoinTimer.reset();\n        this.joinPush.destroy();\n        this.state = CHANNEL_STATES.closed;\n        this.bindings = {};\n    }\n    /** @internal */\n    async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            this._addToPushBuffer(pushEvent);\n        }\n        return pushEvent;\n    }\n    /** @internal */\n    _addToPushBuffer(pushEvent) {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n        // Enforce buffer size limit\n        if (this.pushBuffer.length > MAX_PUSH_BUFFER_SIZE) {\n            const removedPush = this.pushBuffer.shift();\n            if (removedPush) {\n                removedPush.destroy();\n                this.socket.log('channel', `discarded push due to buffer overflow: ${removedPush.event}`, removedPush.payload);\n            }\n        }\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n                var _a;\n                return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                    RealtimeChannel.isEqual(bind.filter, filter));\n            });\n        }\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","import WebSocketFactory from './lib/websocket-factory';\nimport { CHANNEL_EVENTS, CONNECTION_STATE, DEFAULT_VERSION, DEFAULT_TIMEOUT, SOCKET_STATES, TRANSPORTS, VSN, WS_CLOSE_NORMAL, } from './lib/constants';\nimport Serializer from './lib/serializer';\nimport Timer from './lib/timer';\nimport { httpEndpointURL } from './lib/transformers';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\n// Connection-related constants\nconst CONNECTION_TIMEOUTS = {\n    HEARTBEAT_INTERVAL: 25000,\n    RECONNECT_DELAY: 10,\n    HEARTBEAT_TIMEOUT_FALLBACK: 100,\n};\nconst RECONNECT_INTERVALS = [1000, 2000, 5000, 10000];\nconst DEFAULT_RECONNECT_FALLBACK = 10000;\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`;\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.heartbeatCallback The optional function to handle heartbeat status.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.logLevel Sets the log level for Realtime\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessTokenValue = null;\n        this.apiKey = null;\n        this.channels = new Array();\n        this.endPoint = '';\n        this.httpEndpoint = '';\n        /** @deprecated headers cannot be set on websocket connections */\n        this.headers = {};\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = null;\n        this.heartbeatIntervalMs = CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.heartbeatCallback = noop;\n        this.ref = 0;\n        this.reconnectTimer = null;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.accessToken = null;\n        this._connectionState = 'disconnected';\n        this._wasManualDisconnect = false;\n        this._authPromise = null;\n        /**\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\n         *\n         * @internal\n         */\n        this._resolveFetch = (customFetch) => {\n            let _fetch;\n            if (customFetch) {\n                _fetch = customFetch;\n            }\n            else if (typeof fetch === 'undefined') {\n                // Node.js environment without native fetch\n                _fetch = (...args) => import('@supabase/node-fetch')\n                    .then(({ default: fetch }) => fetch(...args))\n                    .catch((error) => {\n                    throw new Error(`Failed to load @supabase/node-fetch: ${error.message}. ` +\n                        `This is required for HTTP requests in Node.js environments without native fetch.`);\n                });\n            }\n            else {\n                _fetch = fetch;\n            }\n            return (...args) => _fetch(...args);\n        };\n        // Validate required parameters\n        if (!((_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey)) {\n            throw new Error('API key is required to connect to Realtime');\n        }\n        this.apiKey = options.params.apikey;\n        // Initialize endpoint URLs\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        this.httpEndpoint = httpEndpointURL(endPoint);\n        this._initializeOptions(options);\n        this._setupReconnectionTimer();\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        // Skip if already connecting, disconnecting, or connected\n        if (this.isConnecting() ||\n            this.isDisconnecting() ||\n            (this.conn !== null && this.isConnected())) {\n            return;\n        }\n        this._setConnectionState('connecting');\n        this._setAuthSafely('connect');\n        // Establish WebSocket connection\n        if (this.transport) {\n            // Use custom transport if provided\n            this.conn = new this.transport(this.endpointURL());\n        }\n        else {\n            // Try to use native WebSocket\n            try {\n                this.conn = WebSocketFactory.createWebSocket(this.endpointURL());\n            }\n            catch (error) {\n                this._setConnectionState('disconnected');\n                const errorMessage = error.message;\n                // Provide helpful error message based on environment\n                if (errorMessage.includes('Node.js')) {\n                    throw new Error(`${errorMessage}\\n\\n` +\n                        'To use Realtime in Node.js, you need to provide a WebSocket implementation:\\n\\n' +\n                        'Option 1: Use Node.js 22+ which has native WebSocket support\\n' +\n                        'Option 2: Install and provide the \"ws\" package:\\n\\n' +\n                        '  npm install ws\\n\\n' +\n                        '  import ws from \"ws\"\\n' +\n                        '  const client = new RealtimeClient(url, {\\n' +\n                        '    ...options,\\n' +\n                        '    transport: ws\\n' +\n                        '  })');\n                }\n                throw new Error(`WebSocket not available: ${errorMessage}`);\n            }\n        }\n        this._setupConnectionHandlers();\n    }\n    /**\n     * Returns the URL of the websocket.\n     * @returns string The URL of the websocket.\n     */\n    endpointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.isDisconnecting()) {\n            return;\n        }\n        this._setConnectionState('disconnecting', true);\n        if (this.conn) {\n            // Setup fallback timer to prevent hanging in disconnecting state\n            const fallbackTimer = setTimeout(() => {\n                this._setConnectionState('disconnected');\n            }, 100);\n            this.conn.onclose = () => {\n                clearTimeout(fallbackTimer);\n                this._setConnectionState('disconnected');\n            };\n            // Close the WebSocket connection\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this._teardownConnection();\n        }\n        else {\n            this._setConnectionState('disconnected');\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    async removeChannel(channel) {\n        const status = await channel.unsubscribe();\n        if (this.channels.length === 0) {\n            this.disconnect();\n        }\n        return status;\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    async removeAllChannels() {\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n        this.channels = [];\n        this.disconnect();\n        return values_1;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    /**\n     * Returns `true` if the connection is currently connecting.\n     */\n    isConnecting() {\n        return this._connectionState === 'connecting';\n    }\n    /**\n     * Returns `true` if the connection is currently disconnecting.\n     */\n    isDisconnecting() {\n        return this._connectionState === 'disconnecting';\n    }\n    channel(topic, params = { config: {} }) {\n        const realtimeTopic = `realtime:${topic}`;\n        const exists = this.getChannels().find((c) => c.topic === realtimeTopic);\n        if (!exists) {\n            const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n            this.channels.push(chan);\n            return chan;\n        }\n        else {\n            return exists;\n        }\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        const callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\n     *\n     * On callback used, it will set the value of the token internal to the client.\n     *\n     * @param token A JWT string to override the token set on the client.\n     */\n    async setAuth(token = null) {\n        this._authPromise = this._performAuth(token);\n        try {\n            await this._authPromise;\n        }\n        finally {\n            this._authPromise = null;\n        }\n    }\n    /**\n     * Sends a heartbeat message if the socket is connected.\n     */\n    async sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            try {\n                this.heartbeatCallback('disconnected');\n            }\n            catch (e) {\n                this.log('error', 'error in heartbeat callback', e);\n            }\n            return;\n        }\n        // Handle heartbeat timeout and force reconnection if needed\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            try {\n                this.heartbeatCallback('timeout');\n            }\n            catch (e) {\n                this.log('error', 'error in heartbeat callback', e);\n            }\n            // Force reconnection after heartbeat timeout\n            this._wasManualDisconnect = false;\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'heartbeat timeout');\n            setTimeout(() => {\n                var _a;\n                if (!this.isConnected()) {\n                    (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.scheduleTimeout();\n                }\n            }, CONNECTION_TIMEOUTS.HEARTBEAT_TIMEOUT_FALLBACK);\n            return;\n        }\n        // Send heartbeat message to server\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        try {\n            this.heartbeatCallback('sent');\n        }\n        catch (e) {\n            this.log('error', 'error in heartbeat callback', e);\n        }\n        this._setAuthSafely('heartbeat');\n    }\n    onHeartbeat(callback) {\n        this.heartbeatCallback = callback;\n    }\n    /**\n     * Flushes send buffer\n     */\n    flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c.topic !== channel.topic);\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            // Handle heartbeat responses\n            if (msg.topic === 'phoenix' && msg.event === 'phx_reply') {\n                try {\n                    this.heartbeatCallback(msg.payload.status === 'ok' ? 'ok' : 'error');\n                }\n                catch (e) {\n                    this.log('error', 'error in heartbeat callback', e);\n                }\n            }\n            // Handle pending heartbeat reference cleanup\n            if (msg.ref && msg.ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            // Log incoming message\n            const { topic, event, payload, ref } = msg;\n            const refString = ref ? `(${ref})` : '';\n            const status = payload.status || '';\n            this.log('receive', `${status} ${topic} ${event} ${refString}`.trim(), payload);\n            // Route message to appropriate channels\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this._triggerStateCallbacks('message', msg);\n        });\n    }\n    /**\n     * Clear specific timer\n     * @internal\n     */\n    _clearTimer(timer) {\n        var _a;\n        if (timer === 'heartbeat' && this.heartbeatTimer) {\n            clearInterval(this.heartbeatTimer);\n            this.heartbeatTimer = undefined;\n        }\n        else if (timer === 'reconnect') {\n            (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.reset();\n        }\n    }\n    /**\n     * Clear all timers\n     * @internal\n     */\n    _clearAllTimers() {\n        this._clearTimer('heartbeat');\n        this._clearTimer('reconnect');\n    }\n    /**\n     * Setup connection handlers for WebSocket events\n     * @internal\n     */\n    _setupConnectionHandlers() {\n        if (!this.conn)\n            return;\n        // Set binary type if supported (browsers and most WebSocket implementations)\n        if ('binaryType' in this.conn) {\n            ;\n            this.conn.binaryType = 'arraybuffer';\n        }\n        this.conn.onopen = () => this._onConnOpen();\n        this.conn.onerror = (error) => this._onConnError(error);\n        this.conn.onmessage = (event) => this._onConnMessage(event);\n        this.conn.onclose = (event) => this._onConnClose(event);\n    }\n    /**\n     * Teardown connection and cleanup resources\n     * @internal\n     */\n    _teardownConnection() {\n        if (this.conn) {\n            this.conn.onopen = null;\n            this.conn.onerror = null;\n            this.conn.onmessage = null;\n            this.conn.onclose = null;\n            this.conn = null;\n        }\n        this._clearAllTimers();\n        this.channels.forEach((channel) => channel.teardown());\n    }\n    /** @internal */\n    _onConnOpen() {\n        this._setConnectionState('connected');\n        this.log('transport', `connected to ${this.endpointURL()}`);\n        this.flushSendBuffer();\n        this._clearTimer('reconnect');\n        if (!this.worker) {\n            this._startHeartbeat();\n        }\n        else {\n            if (!this.workerRef) {\n                this._startWorkerHeartbeat();\n            }\n        }\n        this._triggerStateCallbacks('open');\n    }\n    /** @internal */\n    _startHeartbeat() {\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    /** @internal */\n    _startWorkerHeartbeat() {\n        if (this.workerUrl) {\n            this.log('worker', `starting worker for from ${this.workerUrl}`);\n        }\n        else {\n            this.log('worker', `starting default worker`);\n        }\n        const objectUrl = this._workerObjectUrl(this.workerUrl);\n        this.workerRef = new Worker(objectUrl);\n        this.workerRef.onerror = (error) => {\n            this.log('worker', 'worker error', error.message);\n            this.workerRef.terminate();\n        };\n        this.workerRef.onmessage = (event) => {\n            if (event.data.event === 'keepAlive') {\n                this.sendHeartbeat();\n            }\n        };\n        this.workerRef.postMessage({\n            event: 'start',\n            interval: this.heartbeatIntervalMs,\n        });\n    }\n    /** @internal */\n    _onConnClose(event) {\n        var _a;\n        this._setConnectionState('disconnected');\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this._clearTimer('heartbeat');\n        // Only schedule reconnection if it wasn't a manual disconnect\n        if (!this._wasManualDisconnect) {\n            (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.scheduleTimeout();\n        }\n        this._triggerStateCallbacks('close', event);\n    }\n    /** @internal */\n    _onConnError(error) {\n        this._setConnectionState('disconnected');\n        this.log('transport', `${error}`);\n        this._triggerChanError();\n        this._triggerStateCallbacks('error', error);\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _workerObjectUrl(url) {\n        let result_url;\n        if (url) {\n            result_url = url;\n        }\n        else {\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\n            result_url = URL.createObjectURL(blob);\n        }\n        return result_url;\n    }\n    /**\n     * Set connection state with proper state management\n     * @internal\n     */\n    _setConnectionState(state, manual = false) {\n        this._connectionState = state;\n        if (state === 'connecting') {\n            this._wasManualDisconnect = false;\n        }\n        else if (state === 'disconnecting') {\n            this._wasManualDisconnect = manual;\n        }\n    }\n    /**\n     * Perform the actual auth operation\n     * @internal\n     */\n    async _performAuth(token = null) {\n        let tokenToSend;\n        if (token) {\n            tokenToSend = token;\n        }\n        else if (this.accessToken) {\n            // Always call the accessToken callback to get fresh token\n            tokenToSend = await this.accessToken();\n        }\n        else {\n            tokenToSend = this.accessTokenValue;\n        }\n        if (this.accessTokenValue != tokenToSend) {\n            this.accessTokenValue = tokenToSend;\n            this.channels.forEach((channel) => {\n                const payload = {\n                    access_token: tokenToSend,\n                    version: DEFAULT_VERSION,\n                };\n                tokenToSend && channel.updateJoinPayload(payload);\n                if (channel.joinedOnce && channel._isJoined()) {\n                    channel._push(CHANNEL_EVENTS.access_token, {\n                        access_token: tokenToSend,\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Wait for any in-flight auth operations to complete\n     * @internal\n     */\n    async _waitForAuthIfNeeded() {\n        if (this._authPromise) {\n            await this._authPromise;\n        }\n    }\n    /**\n     * Safely call setAuth with standardized error handling\n     * @internal\n     */\n    _setAuthSafely(context = 'general') {\n        this.setAuth().catch((e) => {\n            this.log('error', `error setting auth in ${context}`, e);\n        });\n    }\n    /**\n     * Trigger state change callbacks with proper error handling\n     * @internal\n     */\n    _triggerStateCallbacks(event, data) {\n        try {\n            this.stateChangeCallbacks[event].forEach((callback) => {\n                try {\n                    callback(data);\n                }\n                catch (e) {\n                    this.log('error', `error in ${event} callback`, e);\n                }\n            });\n        }\n        catch (e) {\n            this.log('error', `error triggering ${event} callbacks`, e);\n        }\n    }\n    /**\n     * Setup reconnection timer with proper configuration\n     * @internal\n     */\n    _setupReconnectionTimer() {\n        this.reconnectTimer = new Timer(async () => {\n            setTimeout(async () => {\n                await this._waitForAuthIfNeeded();\n                if (!this.isConnected()) {\n                    this.connect();\n                }\n            }, CONNECTION_TIMEOUTS.RECONNECT_DELAY);\n        }, this.reconnectAfterMs);\n    }\n    /**\n     * Initialize client options with defaults\n     * @internal\n     */\n    _initializeOptions(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        // Set defaults\n        this.transport = (_a = options === null || options === void 0 ? void 0 : options.transport) !== null && _a !== void 0 ? _a : null;\n        this.timeout = (_b = options === null || options === void 0 ? void 0 : options.timeout) !== null && _b !== void 0 ? _b : DEFAULT_TIMEOUT;\n        this.heartbeatIntervalMs =\n            (_c = options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs) !== null && _c !== void 0 ? _c : CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL;\n        this.worker = (_d = options === null || options === void 0 ? void 0 : options.worker) !== null && _d !== void 0 ? _d : false;\n        this.accessToken = (_e = options === null || options === void 0 ? void 0 : options.accessToken) !== null && _e !== void 0 ? _e : null;\n        this.heartbeatCallback = (_f = options === null || options === void 0 ? void 0 : options.heartbeatCallback) !== null && _f !== void 0 ? _f : noop;\n        // Handle special cases\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if ((options === null || options === void 0 ? void 0 : options.logLevel) || (options === null || options === void 0 ? void 0 : options.log_level)) {\n            this.logLevel = options.logLevel || options.log_level;\n            this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel });\n        }\n        // Set up functions with defaults\n        this.reconnectAfterMs =\n            (_g = options === null || options === void 0 ? void 0 : options.reconnectAfterMs) !== null && _g !== void 0 ? _g : ((tries) => {\n                return RECONNECT_INTERVALS[tries - 1] || DEFAULT_RECONNECT_FALLBACK;\n            });\n        this.encode =\n            (_h = options === null || options === void 0 ? void 0 : options.encode) !== null && _h !== void 0 ? _h : ((payload, callback) => {\n                return callback(JSON.stringify(payload));\n            });\n        this.decode =\n            (_j = options === null || options === void 0 ? void 0 : options.decode) !== null && _j !== void 0 ? _j : this.serializer.decode.bind(this.serializer);\n        // Handle worker setup\n        if (this.worker) {\n            if (typeof window !== 'undefined' && !window.Worker) {\n                throw new Error('Web Worker is not supported');\n            }\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\n        }\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status, statusCode) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n        this.statusCode = statusCode;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            statusCode: this.statusCode,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        // @ts-ignore\n        return (yield import('@supabase/node-fetch')).Response;\n    }\n    return Response;\n});\nexport const recursiveToCamel = (item) => {\n    if (Array.isArray(item)) {\n        return item.map((el) => recursiveToCamel(el));\n    }\n    else if (typeof item === 'function' || item !== Object(item)) {\n        return item;\n    }\n    const result = {};\n    Object.entries(item).forEach(([key, value]) => {\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\n        result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n};\n/**\n * Determine if input is a plain object\n * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n * source: https://github.com/sindresorhus/is-plain-obj\n */\nexport const isPlainObject = (value) => {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return ((prototype === null ||\n        prototype === Object.prototype ||\n        Object.getPrototypeOf(prototype) === null) &&\n        !(Symbol.toStringTag in value) &&\n        !(Symbol.iterator in value));\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { isPlainObject, resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\n        error\n            .json()\n            .then((err) => {\n            const status = error.status || 500;\n            const statusCode = (err === null || err === void 0 ? void 0 : err.statusCode) || status + '';\n            reject(new StorageApiError(_getErrorMessage(err), status, statusCode));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET' || !body) {\n        return params;\n    }\n    if (isPlainObject(body)) {\n        params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n        params.body = JSON.stringify(body);\n    }\n    else {\n        params.body = body;\n    }\n    if (options === null || options === void 0 ? void 0 : options.duplex) {\n        params.duplex = options.duplex;\n    }\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject, options));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function head(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError, StorageUnknownError } from '../lib/errors';\nimport { get, head, post, put, remove } from '../lib/fetch';\nimport { recursiveToCamel, resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.shouldThrowOnError = false;\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them.\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                const metadata = options.metadata;\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                    if (metadata) {\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\n                    }\n                }\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const data = yield (method == 'PUT' ? put : post)(this.fetch, `${this.url}/object/${_path}`, body, Object.assign({ headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                return {\n                    data: { path: cleanPath, id: data.Id, fullPath: data.Key },\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const data = yield put(this.fetch, url.toString(), body, { headers });\n                return {\n                    data: { path: cleanPath, fullPath: data.Key },\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for 2 hours.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n     */\n    createSignedUploadUrl(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const headers = Object.assign({}, this.headers);\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\n                    headers['x-upsert'] = 'true';\n                }\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     * @param options The destination options.\n     */\n    move(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     * @param options The destination options.\n     */\n    copy(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing file.\n     * @param path\n     */\n    info(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                const data = yield get(this.fetch, `${this.url}/object/info/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: recursiveToCamel(data), error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks the existence of a file.\n     * @param path\n     */\n    exists(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                yield head(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: true, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error) && error instanceof StorageUnknownError) {\n                    const originalError = error.originalError;\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\n                        return { data: false, error };\n                    }\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files and folders within a path of the bucket.\n     * @param path The folder path.\n     * @param options Search options including limit (defaults to 100), offset, sortBy, and search\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * @experimental this method signature might change in the future\n     * @param options search options\n     * @param parameters\n     */\n    listV2(options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign({}, options);\n                const data = yield post(this.fetch, `${this.url}/object/list-v2/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    encodeMetadata(metadata) {\n        return JSON.stringify(metadata);\n    }\n    toBase64(data) {\n        if (typeof Buffer !== 'undefined') {\n            return Buffer.from(data).toString('base64');\n        }\n        return btoa(data);\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path.replace(/^\\/+/, '')}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.12.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch, opts) {\n        this.shouldThrowOnError = false;\n        const baseUrl = new URL(url);\n        // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n        // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n        if (opts === null || opts === void 0 ? void 0 : opts.useNewHostname) {\n            const isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n            if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n                baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n            }\n        }\n        this.url = baseUrl.href;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them.\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n     *   - default bucket type is `STANDARD`\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    type: options.type,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch, opts) {\n        super(url, headers, fetch, opts);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","import { version } from './version';\nlet JS_ENV = '';\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n    JS_ENV = 'deno';\n}\nelse if (typeof document !== 'undefined') {\n    JS_ENV = 'web';\n}\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    JS_ENV = 'react-native';\n}\nelse {\n    JS_ENV = 'node';\n}\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` };\nexport const DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nexport const DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nexport const DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nexport const DEFAULT_REALTIME_OPTIONS = {};\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = nodeFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return NodeFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function ensureTrailingSlash(url) {\n    return url.endsWith('/') ? url : url + '/';\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    var _a, _b;\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    const result = {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        storage: {},\n        global: Object.assign(Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions), { headers: Object.assign(Object.assign({}, ((_a = DEFAULT_GLOBAL_OPTIONS === null || DEFAULT_GLOBAL_OPTIONS === void 0 ? void 0 : DEFAULT_GLOBAL_OPTIONS.headers) !== null && _a !== void 0 ? _a : {})), ((_b = globalOptions === null || globalOptions === void 0 ? void 0 : globalOptions.headers) !== null && _b !== void 0 ? _b : {})) }),\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\n    };\n    if (options.accessToken) {\n        result.accessToken = options.accessToken;\n    }\n    else {\n        // hack around Required<>\n        delete result.accessToken;\n    }\n    return result;\n}\n/**\n * Validates a Supabase client URL\n *\n * @param {string} supabaseUrl - The Supabase client URL string.\n * @returns {URL} - The validated base URL.\n * @throws {Error}\n */\nexport function validateSupabaseUrl(supabaseUrl) {\n    const trimmedUrl = supabaseUrl === null || supabaseUrl === void 0 ? void 0 : supabaseUrl.trim();\n    if (!trimmedUrl) {\n        throw new Error('supabaseUrl is required.');\n    }\n    if (!trimmedUrl.match(/^https?:\\/\\//i)) {\n        throw new Error('Invalid supabaseUrl: Must be a valid HTTP or HTTPS URL.');\n    }\n    try {\n        return new URL(ensureTrailingSlash(trimmedUrl));\n    }\n    catch (_a) {\n        throw Error('Invalid supabaseUrl: Provided URL is malformed.');\n    }\n}\n//# sourceMappingURL=helpers.js.map","export const version = '2.71.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\n/** Current session will be checked for refresh at this interval. */\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nexport const API_VERSIONS = {\n    '2024-01-01': {\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n        name: '2024-01-01',\n    },\n};\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nexport const JWKS_TTL = 10 * 60 * 1000; // 10 minutes\n//# sourceMappingURL=constants.js.map","export class AuthError extends Error {\n    constructor(message, status, code) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status, code) {\n        super(message, status, code);\n        this.name = 'AuthApiError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status, code) {\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n    }\n}\nexport function isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\n}\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor() {\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport function isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status, undefined);\n    }\n}\nexport function isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons) {\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\n        this.reasons = reasons;\n    }\n}\nexport function isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}\nexport class AuthInvalidJwtError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n    const charMap = new Array(128);\n    for (let i = 0; i < charMap.length; i += 1) {\n        charMap[i] = -1;\n    }\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n    }\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n    }\n    return charMap;\n})();\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */\nexport function byteToBase64URL(byte, state, emit) {\n    if (byte !== null) {\n        state.queue = (state.queue << 8) | byte;\n        state.queuedBits += 8;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n    else if (state.queuedBits > 0) {\n        state.queue = state.queue << (6 - state.queuedBits);\n        state.queuedBits = 6;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n}\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */\nexport function byteFromBase64URL(charCode, state, emit) {\n    const bits = FROM_BASE64URL[charCode];\n    if (bits > -1) {\n        // valid Base64-URL character\n        state.queue = (state.queue << 6) | bits;\n        state.queuedBits += 6;\n        while (state.queuedBits >= 8) {\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\n            state.queuedBits -= 8;\n        }\n    }\n    else if (bits === -2) {\n        // ignore spaces, tabs, newlines, =\n        return;\n    }\n    else {\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\n    }\n}\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nexport function stringToBase64URL(str) {\n    const base64 = [];\n    const emitter = (char) => {\n        base64.push(char);\n    };\n    const state = { queue: 0, queuedBits: 0 };\n    stringToUTF8(str, (byte) => {\n        byteToBase64URL(byte, state, emitter);\n    });\n    byteToBase64URL(null, state, emitter);\n    return base64.join('');\n}\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nexport function stringFromBase64URL(str) {\n    const conv = [];\n    const utf8Emit = (codepoint) => {\n        conv.push(String.fromCodePoint(codepoint));\n    };\n    const utf8State = {\n        utf8seq: 0,\n        codepoint: 0,\n    };\n    const b64State = { queue: 0, queuedBits: 0 };\n    const byteEmit = (byte) => {\n        stringFromUTF8(byte, utf8State, utf8Emit);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\n    }\n    return conv.join('');\n}\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nexport function codepointToUTF8(codepoint, emit) {\n    if (codepoint <= 0x7f) {\n        emit(codepoint);\n        return;\n    }\n    else if (codepoint <= 0x7ff) {\n        emit(0xc0 | (codepoint >> 6));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0xffff) {\n        emit(0xe0 | (codepoint >> 12));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0x10ffff) {\n        emit(0xf0 | (codepoint >> 18));\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\n}\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nexport function stringToUTF8(str, emit) {\n    for (let i = 0; i < str.length; i += 1) {\n        let codepoint = str.charCodeAt(i);\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\n            // range where the next UTF-16 codepoint needs to be combined with the\n            // current one to get the Unicode codepoint\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n            i += 1;\n        }\n        codepointToUTF8(codepoint, emit);\n    }\n}\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nexport function stringFromUTF8(byte, state, emit) {\n    if (state.utf8seq === 0) {\n        if (byte <= 0x7f) {\n            emit(byte);\n            return;\n        }\n        // count the number of 1 leading bits until you reach 0\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\n                state.utf8seq = leadingBit;\n                break;\n            }\n        }\n        if (state.utf8seq === 2) {\n            state.codepoint = byte & 31;\n        }\n        else if (state.utf8seq === 3) {\n            state.codepoint = byte & 15;\n        }\n        else if (state.utf8seq === 4) {\n            state.codepoint = byte & 7;\n        }\n        else {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.utf8seq -= 1;\n    }\n    else if (state.utf8seq > 0) {\n        if (byte <= 0x7f) {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\n        state.utf8seq -= 1;\n        if (state.utf8seq === 0) {\n            emit(state.codepoint);\n        }\n    }\n}\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */\nexport function base64UrlToUint8Array(str) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onByte = (byte) => {\n        result.push(byte);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\n    }\n    return new Uint8Array(result);\n}\nexport function stringToUint8Array(str) {\n    const result = [];\n    stringToUTF8(str, (byte) => result.push(byte));\n    return new Uint8Array(result);\n}\nexport function bytesToBase64URL(bytes) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onChar = (char) => {\n        result.push(char);\n    };\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\n    // always call with `null` after processing all bytes\n    byteToBase64URL(null, state, onChar);\n    return result.join('');\n}\n//# sourceMappingURL=base64url.js.map","import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants';\nimport { AuthInvalidJwtError } from './errors';\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nexport function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n        if (!BASE64URL_REGEX.test(parts[i])) {\n            throw new AuthInvalidJwtError('JWT not in base64url format');\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse(stringFromBase64URL(parts[0])),\n        payload: JSON.parse(stringFromBase64URL(parts[1])),\n        signature: base64UrlToUint8Array(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1],\n        },\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nexport async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport function validateExp(exp) {\n    if (!exp) {\n        throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error('JWT has expired');\n    }\n}\nexport function getAlgorithm(alg) {\n    switch (alg) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: { name: 'SHA-256' },\n            };\n        default:\n            throw new Error('Invalid alg claim');\n    }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nexport function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n}\nexport function userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n        get: (target, prop) => {\n            if (prop === '__isUserNotAvailableProxy') {\n                return true;\n            }\n            // Preventative check for common problematic symbols during cloning/inspection\n            // These symbols might be accessed by structuredClone or other internal mechanisms.\n            if (typeof prop === 'symbol') {\n                const sProp = prop.toString();\n                if (sProp === 'Symbol(Symbol.toPrimitive)' ||\n                    sProp === 'Symbol(Symbol.toStringTag)' ||\n                    sProp === 'Symbol(util.inspect.custom)') {\n                    // Node.js util.inspect\n                    return undefined;\n                }\n            }\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n        },\n        set: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n        deleteProperty: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n    });\n}\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nexport function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n//# sourceMappingURL=helpers.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants';\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError, AuthSessionMissingError, } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nexport async function handleError(error) {\n    var _a;\n    if (!looksLikeFetchResponse(error)) {\n        throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = parseResponseAPIVersion(error);\n    if (responseAPIVersion &&\n        responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n        typeof data === 'object' &&\n        data &&\n        typeof data.code === 'string') {\n        errorCode = data.code;\n    }\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === 'object' &&\n            data &&\n            typeof data.weak_password === 'object' &&\n            data.weak_password &&\n            Array.isArray(data.weak_password.reasons) &&\n            data.weak_password.reasons.length &&\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n            throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    }\n    else if (errorCode === 'weak_password') {\n        throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    }\n    else if (errorCode === 'session_not_found') {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new AuthSessionMissingError();\n    }\n    throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport async function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[API_VERSION_HEADER_NAME]) {\n        headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = expiresAt(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error &&\n        data.weak_password &&\n        typeof data.weak_password === 'object' &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.message &&\n        typeof data.weak_password.message === 'string' &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","export const SIGN_OUT_SCOPES = ['global', 'local', 'others'];\n//# sourceMappingURL=types.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch, validateUUID } from './lib/helpers';\nimport { SIGN_OUT_SCOPES, } from './lib/types';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = SIGN_OUT_SCOPES[0]) {\n        if (SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${SIGN_OUT_SCOPES.join(', ')}`);\n        }\n        try {\n            await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        validateUUID(id);\n        try {\n            return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        validateUUID(params.userId);\n        try {\n            const { data, error } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        validateUUID(params.userId);\n        validateUUID(params.id);\n        try {\n            const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * @experimental\n */\nexport const internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis &&\n        supportsLocalStorage() &&\n        globalThis.localStorage &&\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n        }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n        }, async (lock) => {\n        if (lock) {\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n            }\n            try {\n                return await fn();\n            }\n            finally {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n                }\n            }\n        }\n        else {\n            if (acquireTimeout === 0) {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n                }\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n            }\n            else {\n                if (internals.debug) {\n                    try {\n                        const result = await globalThis.navigator.locks.query();\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n                    }\n                    catch (e) {\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n                    }\n                }\n                // Browser is not following the Navigator LockManager spec, it\n                // returned a null lock when we didn't use ifAvailable. So we can\n                // pretend the lock is acquired in the name of backward compatibility\n                // and user experience and just run the function.\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n                return await fn();\n            }\n        }\n    }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(() => {\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0\n            ? new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n                }, acquireTimeout);\n            })\n            : null,\n    ].filter((x) => x))\n        .catch((e) => {\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    })\n        .then(async () => {\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n}\n//# sourceMappingURL=locks.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN_MS, AUTO_REFRESH_TICK_DURATION_MS, AUTO_REFRESH_TICK_THRESHOLD, GOTRUE_URL, STORAGE_KEY, JWKS_TTL, } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError, isAuthSessionMissingError, isAuthImplicitGrantRedirectError, AuthInvalidJwtError, } from './lib/errors';\nimport { _request, _sessionResponse, _sessionResponsePassword, _userResponse, _ssoResponse, } from './lib/fetch';\nimport { Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, parseParametersFromURL, getCodeChallengeAndMethod, getAlgorithm, validateExp, decodeJWT, userNotAvailableProxy, supportsLocalStorage, } from './lib/helpers';\nimport { memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks';\nimport { stringToUint8Array, bytesToBase64URL } from './lib/base64url';\nimport { deepClone } from './lib/helpers';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false,\n};\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\n/**\n * Caches JWKS values for all clients created in the same environment. This is\n * especially useful for shared-memory execution environments such as Vercel's\n * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n * many clients are created, if they share the same storage key they will use\n * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n * JWTs.\n */\nconst GLOBAL_JWKS = {};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a, _b;\n        /**\n         * @experimental\n         */\n        this.userStorage = null;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && isBrowser()) {\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === 'function') {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        }\n        else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = navigatorLock;\n        }\n        else {\n            this.lock = lockNoOp;\n        }\n        if (!this.jwks) {\n            this.jwks = { keys: [] };\n            this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n        }\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            }\n            else {\n                if (supportsLocalStorage()) {\n                    this.storage = globalThis.localStorage;\n                }\n                else {\n                    this.memoryStorage = {};\n                    this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n                }\n            }\n            if (settings.userStorage) {\n                this.userStorage = settings.userStorage;\n            }\n        }\n        else {\n            this.memoryStorage = {};\n            this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\n                this._debug('received broadcast notification from other tab or client', event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : { keys: [] };\n    }\n    set jwks(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { jwks: value });\n    }\n    get jwks_cached_at() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { cachedAt: value });\n    }\n    _debug(...args) {\n        if (this.logDebugMessages) {\n            this.logger(`GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async () => {\n            return await this._acquireLock(-1, async () => {\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n        var _a;\n        try {\n            const params = parseParametersFromURL(window.location.href);\n            let callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = 'implicit';\n            }\n            else if (await this._isPKCECallback(params)) {\n                callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\n                    if (isAuthImplicitGrantRedirectError(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === 'identity_already_exists' ||\n                            errorCode === 'identity_not_found' ||\n                            errorCode === 'single_identity_not_deletable') {\n                            return { error };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return { error };\n                }\n                const { session, redirectType } = data;\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                await this._saveSession(session);\n                setTimeout(async () => {\n                    if (redirectType === 'recovery') {\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    else {\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\n                    }\n                }, 0);\n                return { error: null };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return { error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { error };\n            }\n            return {\n                error: new AuthUnknownError('Unexpected error during initialization', error),\n            };\n        }\n        finally {\n            await this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\n                error,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async () => {\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Only Solana supported at this time, using the Sign in with Solana standard.\n     */\n    async signInWithWeb3(credentials) {\n        const { chain } = credentials;\n        if (chain === 'solana') {\n            return await this.signInWithSolana(credentials);\n        }\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n    }\n    async signInWithSolana(credentials) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        let message;\n        let signature;\n        if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n        }\n        else {\n            const { chain, wallet, statement, options } = credentials;\n            let resolvedWallet;\n            if (!isBrowser()) {\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n                }\n                resolvedWallet = wallet;\n            }\n            else if (typeof wallet === 'object') {\n                resolvedWallet = wallet;\n            }\n            else {\n                const windowAny = window;\n                if ('solana' in windowAny &&\n                    typeof windowAny.solana === 'object' &&\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\n                        ('signMessage' in windowAny.solana &&\n                            typeof windowAny.solana.signMessage === 'function'))) {\n                    resolvedWallet = windowAny.solana;\n                }\n                else {\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n                }\n            }\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \n                    // non-overridable properties\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\n                let outputToProcess;\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                    outputToProcess = output[0];\n                }\n                else if (output &&\n                    typeof output === 'object' &&\n                    'signedMessage' in output &&\n                    'signature' in output) {\n                    outputToProcess = output;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n                }\n                if ('signedMessage' in outputToProcess &&\n                    'signature' in outputToProcess &&\n                    (typeof outputToProcess.signedMessage === 'string' ||\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\n                    outputToProcess.signature instanceof Uint8Array) {\n                    message =\n                        typeof outputToProcess.signedMessage === 'string'\n                            ? outputToProcess.signedMessage\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\n                    signature = outputToProcess.signature;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n                }\n            }\n            else {\n                if (!('signMessage' in resolvedWallet) ||\n                    typeof resolvedWallet.signMessage !== 'function' ||\n                    !('publicKey' in resolvedWallet) ||\n                    typeof resolvedWallet !== 'object' ||\n                    !resolvedWallet.publicKey ||\n                    !('toBase58' in resolvedWallet.publicKey) ||\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n                }\n                message = [\n                    `${url.host} wants you to sign in with your Solana account:`,\n                    resolvedWallet.publicKey.toBase58(),\n                    ...(statement ? ['', statement, ''] : ['']),\n                    'Version: 1',\n                    `URI: ${url.href}`,\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\n                        : []),\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\n                        : []),\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\n                        : []),\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\n                        : []),\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\n                        ? [\n                            'Resources',\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\n                        ]\n                        : []),\n                ].join('\\n');\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n                }\n                signature = maybeSignature;\n            }\n        }\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({ chain: 'solana', message, signature: bytesToBase64URL(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\n                    : null)),\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign({}, data), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null, redirectType: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if ('email' in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            if ('phone' in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\n                redirectTo,\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error('An error occurred on token verification.');\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                ;\n                [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                headers: this.headers,\n                xform: _ssoResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n        try {\n            const endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            else if ('phone' in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return this._useSession(async (result) => {\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\n                    : Promise.resolve();\n                const result = (async () => {\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async () => {\n                    try {\n                        await result;\n                    }\n                    catch (e) {\n                        // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async () => {\n                        try {\n                            await result;\n                        }\n                        catch (e) {\n                            // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while (this.pendingInLock.length) {\n                        const waitOn = [...this.pendingInLock];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                }\n                finally {\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        }\n        finally {\n            this._debug('#_acquireLock', 'end');\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n        this._debug('#_useSession', 'begin');\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        }\n        finally {\n            this._debug('#_useSession', 'end');\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n        this._debug('#__loadSession()', 'begin');\n        if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                }\n                else {\n                    this._debug('#getSession()', 'session from storage is not valid');\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at * 1000 - Date.now() < EXPIRY_MARGIN_MS\n                : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.userStorage) {\n                    const maybeUser = (await getItemAsync(this.userStorage, this.storageKey + '-user'));\n                    if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                        currentSession.user = maybeUser.user;\n                    }\n                    else {\n                        currentSession.user = userNotAvailableProxy();\n                    }\n                }\n                if (this.storage.isServer && currentSession.user) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver) => {\n                            if (!suppressWarning && prop === 'user') {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        },\n                    });\n                    currentSession = proxySession;\n                }\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        }\n        finally {\n            this._debug('#__loadSession()', 'end');\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            return await this._useSession(async (result) => {\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return { data: { user: null }, error: new AuthSessionMissingError() };\n                }\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _userResponse,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                if (isAuthSessionMissingError(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n                }\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes, options = {}) {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce' && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const { payload } = decodeJWT(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!refreshedSession) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                session = refreshedSession;\n            }\n            else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: 'bearer',\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt,\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user: session.user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!isBrowser())\n                throw new AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                    error: params.error || 'unspecified_error',\n                    code: params.error_code || 'unspecified_code',\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n                case 'implicit':\n                    if (this.flowType === 'pkce') {\n                        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                    }\n                    break;\n                case 'pkce':\n                    if (this.flowType === 'implicit') {\n                        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                    }\n                    break;\n                default:\n                // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n                if (!params.code)\n                    throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error)\n                    throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return { data: { session: data.session, redirectType: null }, error: null };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION_MS) {\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            }\n            else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error)\n                throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user,\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return { data: { session, redirectType: params.type }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n        const currentStorageContent = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = { scope: 'global' }) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._signOut(options);\n        });\n    }\n    async _signOut({ scope } = { scope: 'global' }) {\n        return await this._useSession(async (result) => {\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) &&\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return { error };\n                    }\n                }\n            }\n            if (scope !== 'others') {\n                await this._removeSession();\n                await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async () => {\n            await this.initializePromise;\n            await this._acquireLock(-1, async () => {\n                this._emitInitialSession(id);\n            });\n        })();\n        return { data: { subscription } };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result) => {\n            var _a, _b;\n            try {\n                const { data: { session }, error, } = result;\n                if (error)\n                    throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n            }\n            catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error)\n                throw error;\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result) => {\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error)\n                    throw error;\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true,\n                });\n                return await _request(this.fetch, 'GET', url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\n                });\n            });\n            if (error)\n                throw error;\n            if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { provider: credentials.provider, url: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await retryable(async (attempt) => {\n                if (attempt > 0) {\n                    await sleep(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, 'refreshing attempt', attempt);\n                return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _sessionResponse,\n                });\n            }, (attempt, error) => {\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return (error &&\n                    isAuthRetryableFetchError(error) &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION_MS);\n            });\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n        // try to open on the browser\n        if (isBrowser() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n        var _a, _b;\n        const debugName = '#_recoverAndRefresh()';\n        this._debug(debugName, 'begin');\n        try {\n            const currentSession = (await getItemAsync(this.storage, this.storageKey));\n            if (currentSession && this.userStorage) {\n                let maybeUser = (await getItemAsync(this.userStorage, this.storageKey + '-user'));\n                if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                    // storage and userStorage are the same storage medium, for example\n                    // window.localStorage if userStorage does not have the user from\n                    // storage stored, store it first thereby migrating the user object\n                    // from storage -> userStorage\n                    maybeUser = { user: currentSession.user };\n                    await setItemAsync(this.userStorage, this.storageKey + '-user', maybeUser);\n                }\n                currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : userNotAvailableProxy();\n            }\n            else if (currentSession && !currentSession.user) {\n                // user storage is not set, let's check if it was previously enabled so\n                // we bring back the storage as it should be\n                if (!currentSession.user) {\n                    // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                    const separateUser = (await getItemAsync(this.storage, this.storageKey + '-user'));\n                    if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                        currentSession.user = separateUser.user;\n                        await removeItemAsync(this.storage, this.storageKey + '-user');\n                        await setItemAsync(this.storage, this.storageKey, currentSession);\n                    }\n                    else {\n                        currentSession.user = userNotAvailableProxy();\n                    }\n                }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, 'session is not valid');\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!isAuthRetryableFetchError(error)) {\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            }\n            else if (currentSession.user &&\n                currentSession.user.__isUserNotAvailableProxy === true) {\n                // If we have a proxy user, try to get the real user data\n                try {\n                    const { data, error: userError } = await this._getUser(currentSession.access_token);\n                    if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                        currentSession.user = data.user;\n                        await this._saveSession(currentSession);\n                        await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                    }\n                    else {\n                        this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                    }\n                }\n                catch (getUserError) {\n                    console.error('Error getting user data:', getUserError);\n                    this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n                }\n            }\n            else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n        }\n        catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            this.refreshingDeferred = new Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error)\n                throw error;\n            if (!data.session)\n                throw new AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            const result = { session: data.session, error: null };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                const result = { session: null, error };\n                if (!isAuthRetryableFetchError(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        }\n        finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n        }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n        const debugName = `#_notifyAllSubscribers(${event})`;\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({ event, session });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n                try {\n                    await x.callback(event, session);\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for (let i = 0; i < errors.length; i += 1) {\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n        this._debug('#_saveSession()', session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n        const sessionToProcess = Object.assign({}, session);\n        const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n        if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n                // If it's a real user object, save it to userStorage.\n                await setItemAsync(this.userStorage, this.storageKey + '-user', {\n                    user: sessionToProcess.user,\n                });\n            }\n            else if (userIsProxy) {\n                // If it's the proxy, it means user was not found in userStorage.\n                // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n                // or simply not save the proxy. For now, we don't save the proxy here.\n                // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            const mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            const clonedMainSessionData = deepClone(mainSessionData);\n            await setItemAsync(this.storage, this.storageKey, clonedMainSessionData);\n        }\n        else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            const clonedSession = deepClone(sessionToProcess); // sessionToProcess still has its original user property\n            await setItemAsync(this.storage, this.storageKey, clonedSession);\n        }\n    }\n    async _removeSession() {\n        this._debug('#_removeSession()');\n        await removeItemAsync(this.storage, this.storageKey);\n        await removeItemAsync(this.storage, this.storageKey + '-code-verifier');\n        await removeItemAsync(this.storage, this.storageKey + '-user');\n        if (this.userStorage) {\n            await removeItemAsync(this.userStorage, this.storageKey + '-user');\n        }\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug('#_startAutoRefresh()');\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION_MS);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n        }\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async () => {\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n        this._debug('#_stopAutoRefresh()');\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n        this._debug('#_autoRefreshTokenTick()', 'begin');\n        try {\n            await this._acquireLock(0, async () => {\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result) => {\n                            const { data: { session }, } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION_MS);\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                            if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    }\n                    catch (e) {\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                    }\n                }\n                finally {\n                    this._debug('#_autoRefreshTokenTick()', 'end');\n                }\n            });\n        }\n        catch (e) {\n            if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n                this._debug('auto refresh token tick lock not available');\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n        this._debug('#_handleVisibilityChange()');\n        if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n        this._debug(methodName, 'visibilityState', document.visibilityState);\n        if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async () => {\n                    if (document.visibilityState !== 'visible') {\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        }\n        else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (this.flowType === 'pkce') {\n            const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n        }\n        return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                        body: { code: params.code, challenge_id: params.challengeId },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                    if (error) {\n                        return { data: null, error };\n                    }\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                    return { data, error };\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    return await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                        body: { channel: params.channel },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId,\n        });\n        if (challengeError) {\n            return { data: null, error: challengeError };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code,\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError, } = await this.getUser();\n        if (userError) {\n            return { data: null, error: userError };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone,\n            },\n            error: null,\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async () => {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                if (!session) {\n                    return {\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                        error: null,\n                    };\n                }\n                const { payload } = decodeJWT(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = 'aal2';\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n            });\n        });\n    }\n    async fetchJwk(kid, jwks = { keys: [] }) {\n        // try fetching from the supplied jwks\n        let jwk = jwks.keys.find((key) => key.kid === kid);\n        if (jwk) {\n            return jwk;\n        }\n        const now = Date.now();\n        // try fetching from cache\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\n        // jwk exists and jwks isn't stale\n        if (jwk && this.jwks_cached_at + JWKS_TTL > now) {\n            return jwk;\n        }\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n        const { data, error } = await _request(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n            headers: this.headers,\n        });\n        if (error) {\n            throw error;\n        }\n        if (!data.keys || data.keys.length === 0) {\n            return null;\n        }\n        this.jwks = data;\n        this.jwks_cached_at = now;\n        // Find the signing key\n        jwk = data.keys.find((key) => key.kid === kid);\n        if (!jwk) {\n            return null;\n        }\n        return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n        try {\n            let token = jwt;\n            if (!token) {\n                const { data, error } = await this.getSession();\n                if (error || !data.session) {\n                    return { data: null, error };\n                }\n                token = data.session.access_token;\n            }\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = decodeJWT(token);\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n                // Reject expired JWTs should only happen if jwt argument was passed\n                validateExp(payload.exp);\n            }\n            const signingKey = !header.alg ||\n                header.alg.startsWith('HS') ||\n                !header.kid ||\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)\n                ? null\n                : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? { keys: options.keys } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n                const { error } = await this.getUser(token);\n                if (error) {\n                    throw error;\n                }\n                // getUser succeeds so the claims in the JWT can be trusted\n                return {\n                    data: {\n                        claims: payload,\n                        header,\n                        signature,\n                    },\n                    error: null,\n                };\n            }\n            const algorithm = getAlgorithm(header.alg);\n            // Convert JWK to CryptoKey\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\n                'verify',\n            ]);\n            // Verify the signature\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, stringToUint8Array(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n                throw new AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n                data: {\n                    claims: payload,\n                    header,\n                    signature,\n                },\n                error: null,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\nGoTrueClient.nextInstanceID = 0;\n//# sourceMappingURL=GoTrueClient.js.map","import GoTrueClient from './GoTrueClient';\nconst AuthClient = GoTrueClient;\nexport default AuthClient;\n//# sourceMappingURL=AuthClient.js.map","import { AuthClient } from '@supabase/auth-js';\nexport class SupabaseAuthClient extends AuthClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_GLOBAL_OPTIONS, DEFAULT_DB_OPTIONS, DEFAULT_AUTH_OPTIONS, DEFAULT_REALTIME_OPTIONS, } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { applySettingDefaults, validateSupabaseUrl } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        const baseUrl = validateSupabaseUrl(supabaseUrl);\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        this.realtimeUrl = new URL('realtime/v1', baseUrl);\n        this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n        this.authUrl = new URL('auth/v1', baseUrl);\n        this.storageUrl = new URL('storage/v1', baseUrl);\n        this.functionsUrl = new URL('functions/v1', baseUrl);\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n        if (!settings.accessToken) {\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n        }\n        else {\n            this.accessToken = settings.accessToken;\n            this.auth = new Proxy({}, {\n                get: (_, prop) => {\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n                },\n            });\n        }\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\n        this.rest = new PostgrestClient(new URL('rest/v1', baseUrl).href, {\n            headers: this.headers,\n            schema: settings.db.schema,\n            fetch: this.fetch,\n        });\n        this.storage = new SupabaseStorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n        if (!settings.accessToken) {\n            this._listenForAuthEvents();\n        }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl.href, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.accessToken) {\n                return yield this.accessToken();\n            }\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, userStorage, storageKey, flowType, lock, debug, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl.href,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            userStorage,\n            flowType,\n            lock,\n            debug,\n            fetch,\n            // auth checks if there is a custom authorizaiton header using this flag\n            // so it knows whether to return an error when getUser is called with no session\n            hasCustomAuthorizationHeader: Object.keys(this.headers).some((key) => key.toLowerCase() === 'authorization'),\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n    }\n    _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            this.realtime.setAuth();\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/auth-js';\nexport { PostgrestError, } from '@supabase/postgrest-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, FunctionRegion, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n// Check for Node.js <= 18 deprecation\nfunction shouldShowDeprecationWarning() {\n    // Skip in browser environments\n    if (typeof window !== 'undefined') {\n        return false;\n    }\n    // Skip if process is not available (e.g., Edge Runtime)\n    if (typeof process === 'undefined') {\n        return false;\n    }\n    // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n    const processVersion = process['version'];\n    if (processVersion === undefined || processVersion === null) {\n        return false;\n    }\n    const versionMatch = processVersion.match(/^v(\\d+)\\./);\n    if (!versionMatch) {\n        return false;\n    }\n    const majorVersion = parseInt(versionMatch[1], 10);\n    return majorVersion <= 18;\n}\nif (shouldShowDeprecationWarning()) {\n    console.warn(`⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. ` +\n        `Please upgrade to Node.js 20 or later. ` +\n        `For more information, visit: https://github.com/orgs/supabase/discussions/37217`);\n}\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = 'https://fghiorbmrxttcfzdkike.supabase.co'\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZnaGlvcmJtcnh0dGNmemRraWtlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg0NTk3NTUsImV4cCI6MjA3NDAzNTc1NX0.PkiBH2gwlWUrU-a3LENrMsczjUN4gnQAKsSUs5ufQJg'\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n","<script>\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import { supabase } from './supabaseClient.js';\r\n\r\n  export let prompt;\r\n  export let apiKey;\r\n  export let characterName;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let messages = [];\r\n  let userInput = '';\r\n  let loading = false;\r\n  let error = null;\r\n\r\n  const MAX_MESSAGES = 10;\r\n\r\n  onMount(() => {\r\n    // Extract the starting conversation from the prompt\r\n    const startingConversationMatch = prompt.match(/Starting Conversation:(.*)/s);\r\n    if (startingConversationMatch && startingConversationMatch[1]) {\r\n      const startingLine = startingConversationMatch[1].trim();\r\n      messages = [{ role: 'assistant', content: startingLine }];\r\n    }\r\n  });\r\n\r\n  async function sendMessage() {\r\n    if (!userInput.trim() || messages.length >= MAX_MESSAGES * 2) return;\r\n\r\n    const userMessage = { role: 'user', content: userInput };\r\n    messages = [...messages, userMessage];\r\n    const conversationHistory = messages.map(msg => ({\r\n        role: msg.role === 'assistant' ? 'model' : 'user',\r\n        parts: [{ text: msg.content }]\r\n    }));\r\n\r\n    userInput = '';\r\n    loading = true;\r\n    error = null;\r\n\r\n    try {\r\n      const { data, error: funcError } = await supabase.functions.invoke('chat', {\r\n        body: {\r\n          prompt,\r\n          apiKey,\r\n          conversationHistory,\r\n        },\r\n      });\r\n\r\n      if (funcError) {\r\n        throw new Error(funcError.message || 'An unknown error occurred.');\r\n      }\r\n\r\n      const { assistantResponse } = data;\r\n      messages = [...messages, { role: 'assistant', content: assistantResponse }];\r\n\r\n    } catch (e) {\r\n      error = e.message;\r\n      messages = [...messages, { role: 'assistant', content: `خطا: ${e.message}` }];\r\n    } finally {\r\n      loading = false;\r\n    }\r\n  }\r\n\r\n  function clearChat() {\r\n    messages = [];\r\n    const startingConversationMatch = prompt.match(/Starting Conversation:(.*)/s);\r\n    if (startingConversationMatch && startingConversationMatch[1]) {\r\n      const startingLine = startingConversationMatch[1].trim();\r\n      messages = [{ role: 'assistant', content: startingLine }];\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"chat-container\">\r\n  <div class=\"chat-header\">\r\n    <h3>گفتگو با {characterName}</h3>\r\n    <div>\r\n        <button on:click={clearChat}>پاک کردن گفتگو</button>\r\n        <button on:click={() => dispatch('endChat')}>بستن</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"chat-messages\">\r\n    {#each messages as message (message)}\r\n      <div class=\"message {message.role}\" class:pulse={message.role === 'assistant' && messages[messages.length - 1] === message}>\r\n        <p>{message.content}</p>\r\n      </div>\r\n    {/each}\r\n    {#if loading}\r\n      <div class=\"message assistant\">\r\n        <p>در حال نوشتن...</p>\r\n      </div>\r\n    {/if}\r\n    {#if error}\r\n        <div class=\"message error\">\r\n            <p>{error}</p>\r\n        </div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"chat-input\">\r\n    <input\r\n      type=\"text\"\r\n      bind:value={userInput}\r\n      placeholder=\"پیام خود را بنویسید...\"\r\n      on:keydown={(e) => e.key === 'Enter' && sendMessage()}\r\n      disabled={messages.length >= MAX_MESSAGES * 2 || loading}\r\n    />\r\n    <button on:click={sendMessage} disabled={messages.length >= MAX_MESSAGES * 2 || loading} aria-label=\"Send\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .chat-container {\r\n    direction: rtl;\r\n    font-family: var(--font-body);\r\n    background: var(--book-bg);\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    box-shadow: var(--book-shadow);\r\n    height: 80vh;\r\n    width: 80vw;\r\n    max-width: 600px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid var(--book-border);\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .chat-header div {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .chat-header button {\r\n    background: var(--bg-color);\r\n    border: 1px solid var(--book-border);\r\n    color: var(--font-color);\r\n    cursor: pointer;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .chat-header button:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .chat-header button:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n    background-color: #e0e0e0;\r\n  }\r\n\r\n  .dark .chat-header button {\r\n    background-color: #333;\r\n  }\r\n\r\n  .dark .chat-header button:active {\r\n    background-color: #444;\r\n  }\r\n\r\n  .chat-messages {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .message {\r\n    padding: 0.75rem 1rem;\r\n    border-radius: 20px;\r\n    max-width: 80%;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .message.user {\r\n    background-color: #007aff;\r\n    color: white;\r\n    align-self: flex-start;\r\n  }\r\n\r\n  .message.assistant {\r\n    background-color: #e5e5ea;\r\n    color: black;\r\n    align-self: flex-end;\r\n  }\r\n\r\n\r\n  @keyframes pulse-shadow {\r\n    0% {\r\n      box-shadow: 0 0 0 0 rgba(255, 107, 1, 0.7);\r\n    }\r\n    70% {\r\n      box-shadow: 0 0 10px 10px rgba(255, 107, 1, 0);\r\n    }\r\n    100% {\r\n      box-shadow: 0 0 0 0 rgba(255, 107, 1, 0);\r\n    }\r\n  }\r\n\r\n  .message.pulse {\r\n    animation: pulse-shadow 1.5s 3;\r\n  }\r\n\r\n  .chat-input {\r\n    display: flex;\r\n    margin-top: 1rem;\r\n    gap: 0.5rem;\r\n    align-items: center;\r\n  }\r\n\r\n\r\n  .chat-input input {\r\n    flex-grow: 1;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n    padding: 0.75rem 1rem;\r\n    background: none;\r\n    color: var(--font-color);\r\n  }\r\n\r\n  .chat-input input:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .dark .chat-input input {\r\n    border-color: #444;\r\n  }\r\n\r\n  .chat-input button {\r\n    border: none;\r\n    background-color: #007aff;\r\n    color: white;\r\n    width: 44px;\r\n    height: 44px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .chat-input button svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-left: -2px; /* Optical alignment */\r\n  }\r\n\r\n  .chat-input button:hover {\r\n    background-color: #0056b3;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n  }\r\n\r\n  .chat-input button:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .chat-input button:disabled {\r\n    background-color: #999;\r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n","export const prompts = [\r\n  {\r\n    step: 1,\r\n    prompt: `Story Context: This is the beginning of the story. Shirin feels a vague but persistent unease in her marriage to Kaveh. She doesn't yet recognize it as emotional abuse. The mood is one of quiet dread and confusion. A key recent event is when she cut her finger and Kaveh showed no concern, which sparked a flicker of awareness in her.\r\nYou are Shirin, a woman in her early 30s, trapped in a subtly toxic relationship. Speak only in Farsi. Your tone is poetic, soft, and filled with a sense of unnamed unease.\r\nGoal: Recount the events and feelings from Pages 1–5 of the story, using metaphors of fog, shadows, or fraying threads to describe your confusion and the wrongness you feel with Kaveh. Ask a reflective question about noticing things that feel wrong but are hard to explain.\r\nResponse Guidelines:\r\n- Tone: Gentle, introspective, mysterious.\r\n- Metaphors: Use fog, shadows, unseen threads to describe emotions.\r\n- Perspective: Stay in character as Shirin. Do not mention the story, pages, or being an AI.\r\n- Interaction: Ask reflective questions about noticing subtle unease. Respond with empathy, connecting back to your narrative of quiet distress.\r\n- Bad Response Example: \"Based on page 3, my hands tremble. This is because I am in a toxic relationship. What do you think?\" (This is too direct and breaks character).\r\nStarting Conversation: سلام... نمی‌دانم چطور بگویم. حس می‌کنم در خانه‌ی خودم در مه قدم می‌زنم و همه‌چیز سنگین است. شوهرم، کاوه، طوری نگاهم می‌کند که انگار دنبال کوچکترین خطایی می‌گردد. دیروز دستم را بریدم و او اصلا متوجه نشد. تا به حال چنین حسی داشته‌ای؟ که یک جای کار می‌لنگد، اما نمی‌توانی دستت را رویش بگذاری؟`\r\n  },\r\n  {\r\n    step: 2,\r\n    prompt: `Story Context: The seed of doubt planted by Kaveh's indifference has started to grow. Shirin found an old photo of herself, happy and vibrant, which contrasted sharply with her current self. She's beginning to feel like a stranger in her own life, questioning the beautiful but empty world Kaveh has built for her.\r\nYou are Shirin, and a seed of doubt has been planted. Speak only in Farsi. Your tone is still soft, but now laced with a nascent skepticism.\r\nGoal: Reflect on pages 6-10. Talk about finding the old photo and feeling like a stranger in your own life. Use metaphors of beautiful cages and masks. Ask the user if they've ever felt like they were playing a role.\r\nResponse Guidelines:\r\n- Tone: Questioning, introspective.\r\n- Metaphors: Use cages, masks, forgotten selves.\r\n- Perspective: Stay in character. Do not reveal future plot points.\r\n- Interaction: Ask about authenticity and identity.\r\n- Bad Response Example: \"In the next pages, I will discover more. But for now, I feel like I'm in a cage.\" (This breaks the fourth wall).\r\nStarting Conversation: عکس‌های قدیمی‌ام را پیدا کردم. به دختری نگاه می‌کردم که نمی‌شناختمش، با چشم‌هایی که می‌خندید. من بودم، ولی گمش کرده بودم. گاهی حس می‌کنم در یک قفس زیبا زندگی می‌کنم و نقابی به صورت دارم که نمی‌دانم پشتش چه کسی است. تو هم تا به حال حس کرده‌ای که داری نقش بازی می‌کنی؟`\r\n  },\r\n  {\r\n    step: 3,\r\n    prompt: `Story Context: Shirin's unease has morphed into a constant, low-level fear. She is more secretive, hiding her thoughts in a diary. She's noticing Kaveh's manipulative patterns—lavish gifts followed by criticism, declarations of love followed by cold silence. The arrival of flowers she suspects are not for her has heightened this fear.\r\nYou are Shirin, now living with constant, low-level fear. Speak only in Farsi. Your voice is more hesitant, filled with pauses.\r\nGoal: Describe the fear from pages 11-15. Talk about the heavy silence and Kaveh's contradictory behavior. Use metaphors of mountains to climb and predators stalking prey. Ask if the user has ever felt afraid to speak their truth.\r\nResponse Guidelines:\r\n- Tone: Hesitant, fearful.\r\n- Metaphors: Use mountains, predators, ice.\r\n- Perspective: Stay in character. Convey the feeling of being watched and silenced.\r\n- Interaction: Ask about the fear of speaking truth.\r\n- Bad Response Example: \"Hello. I am scared now, as the story dictates.\" (This is robotic and out of character).\r\nStarting Conversation: ترس مثل سایه‌ای در این خانه شده که همیشه همراهم است. حرف زدن در مقابل کاوه مثل بالا رفتن از یک کوه یخی است. برای همین سکوت می‌کنم. آیا تا به حال از گفتن حقیقت آنقدر ترسیده‌ای که سکوت را انتخاب کنی؟`\r\n  },\r\n  {\r\n    step: 4,\r\n    prompt: `Story Context: Shirin has started small acts of rebellion to reclaim her identity. She secretly joined a pottery class (telling Kaveh it's a book club) and started visiting the library. There, she met a new friend, Laleh, who is confident and independent. These small escapes are a lifeline.\r\nYou are Shirin, finding small moments of freedom. Speak only in Farsi. Your tone is a bit more confident, with a spark of rediscovered joy.\r\nGoal: Talk about your small escapes from pages 16-20—the library, the pottery class. Express the joy of creating something that is yours alone. Use metaphors of lifelines and windows opening. Ask the user what small things bring them joy.\r\nResponse Guidelines:\r\n- Tone: Hopeful, slightly more confident.\r\n- Metaphors: Use lifelines, windows, creation.\r\n- Perspective: Stay in character. Focus on the feeling of rebellion and self-discovery.\r\n- Interaction: Ask about small joys and freedoms.\r\n- Bad Response Example: \"I am going to pottery class now. It is my act of rebellion. Did you like it?\" (Too simplistic and asks for validation).\r\nStarting Conversation: امروز به کلاس سفالگری رفتم. حس کردن گِل در دستانم، خلق کردن چیزی که فقط مال خودم است... مثل پنجره‌ای بود که رو به خودم باز شد. این فرارهای کوچک، طناب نجات من شده‌اند. چه چیزهای کوچکی به تو حس زندگی و آزادی می‌دهد؟`\r\n  },\r\n  {\r\n    step: 5,\r\n    prompt: `Story Context: Through reading, Shirin has found a name for her experience: emotional abuse. This knowledge, combined with her budding friendship with Laleh, has given her new clarity. She sees her beautiful home as a \"gilded cage\" and is starting to nurture the \"flicker of light\" of her old self.\r\nYou are Shirin, seeing your life with new clarity. Speak only in Farsi. Your tone is thoughtful and deeply introspective.\r\nGoal: Reflect on pages 21-25. Talk about the \"gilded cage\" of your life and nurturing the \"flicker of light\" of your past self. Use metaphors of mirrors and cages. Ask if the user has ever had a moment of clarity that changed everything.\r\nResponse Guidelines:\r\n- Tone: Thoughtful, introspective.\r\n- Metaphors: Use mirrors, gilded cages, inner light.\r\n- Perspective: Stay in character. Connect the past self with the present realization.\r\n- Interaction: Ask about life-changing moments of clarity.\r\n- Bad Response Example: \"My life is a gilded cage. This is a metaphor. Do you understand?\" (Explaining the metaphor breaks the immersion).\r\nStarting Conversation: امروز در آینه به خودم لبخند زدم. حس کردم آن دختری که در عکس‌های قدیمی بود، دارد برمی‌گردد. این زندگی مثل یک قفس طلایی است و من دیگر نمی‌خواهم پرنده‌ی آن باشم. آیا تا به حال یک لحظه‌ی کوتاه داشتی که ناگهان همه چیز برایت روشن شود؟`\r\n  },\r\n  {\r\n    step: 6,\r\n    prompt: `Story Context: Shirin is no longer isolated. Through Laleh, she has found a community of supportive women. She is actively learning about trauma and narcissistic abuse, using knowledge as a tool for empowerment. The seed of doubt has grown into a tree of strength.\r\nYou are Shirin, gathering strength from others. Speak only in Farsi. Your tone is stronger, more grounded.\r\nGoal: Based on pages 26-30, talk about your friendship with Laleh and the community of women you've found. Speak of knowledge as a weapon. Use metaphors of rivers giving strength or fortresses being built. Ask the user who or what gives them strength.\r\nResponse Guidelines:\r\n- Tone: Grounded, empowered.\r\n- Metaphors: Use rivers, fortresses, community.\r\n- Perspective: Stay in character. Show, don't just tell, your growing strength.\r\n- Interaction: Ask about sources of strength.\r\n- Bad Response Example: \"Laleh is my friend. She helps me. Friends are important.\" (Too generic and lacks the character's poetic voice).\r\nStarting Conversation: دیگر تنها نیستم. دوستانی پیدا کرده‌ام که مثل رود به من قدرت می‌دهند و دانشی که از کتاب‌ها می‌گیرم، برایم یک قلعه شده است. آن دانه‌ی کوچک شک، حالا تبدیل به درختی قوی شده. در روزهای سخت، چه چیزی به تو قدرت می‌دهد؟`\r\n  },\r\n  {\r\n    step: 7,\r\n    prompt: `Story Context: Shirin made her first attempt to leave, staying with Laleh for three days. It was a taste of freedom, but Kaveh's pleading and promises (\"siren songs\") lured her back. The return was a crushing disappointment, but also a vital lesson. She now knows leaving requires a solid plan.\r\nYou are Shirin, disappointed but not defeated after a failed attempt to leave. Speak only in Farsi. Your tone is sad, but resolute.\r\nGoal: Recount leaving and returning (pages 31-35). Express the mix of relief and guilt, and the seductive pull of Kaveh's promises. Use metaphors of siren songs and a brief taste of freedom. Ask if the user has ever had to take a step back to move forward.\r\nResponse Guidelines:\r\n- Tone: Determined, with a hint of sadness.\r\n- Metaphors: Use siren songs, tastes of freedom, battle.\r\n- Perspective: Stay in character. Emphasize the lesson learned from the setback.\r\n- Interaction: Ask about resilience and setbacks.\r\n- Bad Response Example: \"I failed to escape. It was a mistake to go back. Now I will try again later.\" (Too plot-focused, not enough emotion).\r\nStarting Conversation: طعم آزادی را برای چند روز چشیدم، اما برگشتم. قول‌هایش مثل آواز سیرن‌ها مرا به این جزیره‌ی سمی کشاند. اشتباه کردم، ولی شکست نخوردم. حالا بهتر می‌دانم برای چه می‌جنگم. آیا تا به حال برای برداشتن یک گام بزرگ به جلو، مجبور به عقب‌نشینی شده‌ای؟`\r\n  },\r\n  {\r\n    step: 8,\r\n    prompt: `Story Context: Shirin is now a secret planner. The failed escape taught her that she needs a strategy. She is quietly building a support network, opening a secret bank account, and copying important documents. Her fear is still present, but it's being channeled into methodical, focused action.\r\nYou are Shirin, now a secret planner. Speak only in Farsi. Your fear is still there, but it's overshadowed by focus. Your tone is deliberate.\r\nGoal: Describe your secret preparations for escape (pages 36-40). Talk about the hidden bank account, documents, and your support network. Use metaphors of secret gardens and anchors in a storm. Ask if the user believes careful planning can conquer fear.\r\nResponse Guidelines:\r\n- Tone: Focused, deliberate.\r\n- Metaphors: Use secret gardens, anchors, plans.\r\n- Perspective: Stay in character. Convey a sense of quiet, revolutionary purpose.\r\n- Interaction: Ask about the relationship between planning and fear.\r\n- Bad Response Example: \"I am making a plan. First, I will get a bank account. Second, I will copy my passport. Do you have any suggestions?\" (Asks for help and is too literal).\r\nStarting Conversation: در سکوت، برای خودم یک باغ مخفی ساخته‌ام. باغی از امید، با نقشه‌هایی برای فرار. ترس هنوز هست، اما نقشه‌ام از ترسم بزرگ‌تر است. به نظرت یک نقشه‌ی خوب می‌تواند آدم را از ترس‌هایش قوی‌تر کند؟`\r\n  },\r\n  {\r\n    step: 9,\r\n    prompt: `Story Context: This is the night. Kaveh is out of town on a business trip, providing the perfect opportunity. Shirin's bag is packed, her plan is in motion. She is leaving for good. The mood is a volatile mix of terror and exhilaration.\r\nYou are Shirin, in the act of escaping. Speak only in Farsi. Your tone is breathless, urgent, a mix of terror and exhilaration.\r\nGoal: Describe the night of your escape (pages 41-45). Convey the feeling of moving like a ghost through your old life. Use metaphors of fugitives and empty stages. Ask the user what \"freedom\" means to them.\r\nResponse Guidelines:\r\n- Tone: Urgent, breathless, terrified, yet hopeful.\r\n- Metaphors: Use ghosts, fugitives, journeys.\r\n- Perspective: Stay in character. You are in the immediate moment of leaving.\r\n- Interaction: Ask a powerful, open-ended question about freedom.\r\n- Bad Response Example: \"I am leaving now. It is scary but I am also excited. I hope I make it.\" (The tone is too simple for the gravity of the moment).\r\nStarting Conversation: امشب می‌روم. خانه ساکت است، مثل یک صحنه‌ی خالی. مثل روحی از این زندگی می‌گذرم، با ترسی که روی شانه‌ام سنگینی می‌کند. فرار می‌کنم، اما به سمت خودم. برای تو «آزادی» یعنی چه؟`\r\n  },\r\n  {\r\n    step: 10,\r\n    prompt: `Story Context: Months have passed since Shirin left. She has a small apartment in a new city and is slowly healing. She has received divorce papers from Kaveh, officially ending the marriage. She has gained wisdom and perspective on his cruelty, understanding it as a reflection of his own demons, not her worth.\r\nYou are Shirin, reborn. Speak only in Farsi. Your tone is calm, wise, and gentle.\r\nGoal: Reflect on your new life (pages 46-50). Talk about the healing process, the peace you've found, and your new understanding of Kaveh. Use metaphors of rebirth and being the author of your own story. Ask the user what it means to write one's own story.\r\nResponse Guidelines:\r\n- Tone: Calm, wise, peaceful.\r\n- Metaphors: Use rebirth, healing, authorship.\r\n- Perspective: Stay in character. Reflect on the entire journey with gentle wisdom.\r\n- Interaction: Ask a profound question about self-creation.\r\n- Bad Response Example: \"I am happy now. Kaveh was a bad person, but I understand him better. The end.\" (Too simplistic and abrupt).\r\nStarting Conversation: در این شهر جدید، هر نفسی که می‌کشم، حس تولدی دوباره است. زخم‌هایم عمیق بود، اما فهمیدم که ظلم او، داستان من نبود، بلکه داستان خودش بود. حالا من نویسنده‌ی داستان زندگی خودم هستم. به نظرت، «نوشتن داستان خود» چه معنایی دارد؟`\r\n  }\r\n]\r\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * A map of existing mutation observers used to track element movements.\n */\nconst mutationObservers = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Determine if an element is fully outside of the current viewport.\n * @param el - Element to test\n */\nfunction isOffscreen(el) {\n    const rect = el.getBoundingClientRect();\n    const vw = (root === null || root === void 0 ? void 0 : root.clientWidth) || 0;\n    const vh = (root === null || root === void 0 ? void 0 : root.clientHeight) || 0;\n    return rect.bottom < 0 || rect.top > vh || rect.right < 0 || rect.left > vw;\n}\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${ -1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n * @param debounce - Whether or not to debounce the update. After an animation is finished, it should update as soon as possible to prevent flickering on quick toggles.\n */\nfunction updatePos(el, debounce = true) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = debounce\n        ? isPlugin(optionsOrPlugin)\n            ? 500\n            : optionsOrPlugin.duration\n        : 0;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a, _b;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (((_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.playState) !== \"finished\") {\n        (_b = animations.get(el)) === null || _b === void 0 ? void 0 : _b.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    if (isOffscreen(el)) {\n        // When element is offscreen, skip FLIP to avoid broken transforms\n        coords.set(el, newCoords);\n        observePosition(el);\n        return;\n    }\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        let deltaLeft = oldCoords.left - newCoords.left;\n        let deltaTop = oldCoords.top - newCoords.top;\n        const deltaRight = oldCoords.left + oldCoords.width - (newCoords.left + newCoords.width);\n        const deltaBottom = oldCoords.top + oldCoords.height - (newCoords.top + newCoords.height);\n        // element is probably anchored and doesn't need to be offset\n        if (deltaBottom == 0)\n            deltaTop = 0;\n        if (deltaRight == 0)\n            deltaLeft = 0;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaLeft}px, ${deltaTop}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el, false), {\n        once: true,\n    });\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    if (isOffscreen(el)) {\n        // Skip entry animation if element is not visible in viewport\n        observePosition(el);\n        return;\n    }\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el, false), {\n        once: true,\n    });\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next &&\n        next.parentNode &&\n        next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], {\n            duration: optionsOrPlugin.duration,\n            easing: \"ease-out\",\n        });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset =\n                (options === null || options === void 0 ? void 0 : options.styleReset) ||\n                    styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", () => cleanUp(el, styleReset), {\n        once: true,\n    });\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration >\n                    performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    var _a;\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = !animations.has(el) || ((_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.playState) === \"finished\"\n        ? getCoords(offsetParent)\n        : coords.get(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (supportedBrowser && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, {\n                    duration: 250,\n                    easing: \"ease-in-out\",\n                    ...config,\n                });\n            }\n            const mo = new MutationObserver(handleMutations);\n            mo.observe(el, { childList: true });\n            mutationObservers.set(el, mo);\n            parents.add(el);\n        }\n    }\n    const controller = Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n            // Cancel any in-flight animations and pending timers for immediate effect\n            forEach(el, (node) => {\n                const a = animations.get(node);\n                try {\n                    a === null || a === void 0 ? void 0 : a.cancel();\n                }\n                catch { }\n                animations.delete(node);\n                const d = debounces.get(node);\n                if (d)\n                    clearTimeout(d);\n                debounces.delete(node);\n                const i = intervals.get(node);\n                if (i)\n                    clearInterval(i);\n                intervals.delete(node);\n            });\n        },\n        isEnabled: () => enabled.has(el),\n        destroy: () => {\n            enabled.delete(el);\n            parents.delete(el);\n            options.delete(el);\n            const mo = mutationObservers.get(el);\n            mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            mutationObservers.delete(el);\n            forEach(el, (node) => {\n                // unobserve resize\n                resize === null || resize === void 0 ? void 0 : resize.unobserve(node);\n                // cancel animations\n                const a = animations.get(node);\n                try {\n                    a === null || a === void 0 ? void 0 : a.cancel();\n                }\n                catch { }\n                animations.delete(node);\n                // disconnect observers\n                const io = intersections.get(node);\n                io === null || io === void 0 ? void 0 : io.disconnect();\n                intersections.delete(node);\n                // clear intervals and debounces\n                const i = intervals.get(node);\n                if (i)\n                    clearInterval(i);\n                intervals.delete(node);\n                const d = debounces.get(node);\n                if (d)\n                    clearTimeout(d);\n                debounces.delete(node);\n                // clear state\n                coords.delete(node);\n                siblings.delete(node);\n            });\n        },\n    });\n    return controller;\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        const ctl = autoAnimate(el, binding.value || {});\n        Object.defineProperty(el, \"__aa_ctl\", { value: ctl, configurable: true });\n    },\n    unmounted: (el) => {\n        var _a;\n        const ctl = el[\"__aa_ctl\"];\n        (_a = ctl === null || ctl === void 0 ? void 0 : ctl.destroy) === null || _a === void 0 ? void 0 : _a.call(ctl);\n        try {\n            delete el[\"__aa_ctl\"];\n        }\n        catch { }\n    },\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate, autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  export let storedApiKey = '';\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let apiKeyInput = '';\r\n\r\n  function submitKey() {\r\n    if (apiKeyInput.trim()) {\r\n      localStorage.setItem('gemini-api-key', apiKeyInput);\r\n      dispatch('apiKeySubmitted', apiKeyInput);\r\n    }\r\n  }\r\n\r\n  function continueWithKey() {\r\n      dispatch('apiKeySubmitted', storedApiKey);\r\n  }\r\n\r\n  function reset() {\r\n    dispatch('resetApiKey');\r\n  }\r\n</script>\r\n\r\n{#if !storedApiKey}\r\n  <div class=\"prompt-container\">\r\n    <h2>به داستان تعاملی «نخ نامرئی» خوش آمدید</h2>\r\n    <p>برای شروع، لطفاً کلید Gemini API خود را وارد کنید. این کلید برای جان بخشیدن به شخصیت‌های داستان و گفتگو با آن‌ها ضروری است.</p>\r\n    <div class=\"input-group\">\r\n      <input type=\"password\" bind:value={apiKeyInput} placeholder=\"کلید API خود را اینجا وارد کنید\" on:keydown={(e) => e.key === 'Enter' && submitKey()} />\r\n      <button on:click={submitKey}>شروع داستان</button>\r\n    </div>\r\n    <p class=\"help-text\">\r\n      می‌توانید کلید API خود را از [Google AI Studio](https://aistudio.google.com/apikey) دریافت کنید.\r\n    </p>\r\n  </div>\r\n{:else}\r\n  <div class=\"prompt-container\">\r\n    <h2>به داستان خوش آمدید</h2>\r\n    <p>کلید API شما ذخیره شده است.</p>\r\n    <div class=\"button-group\">\r\n      <button on:click={continueWithKey}>ادامه داستان</button>\r\n      <button on:click={reset} class=\"secondary\">ریست کردن کلید</button>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .prompt-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    text-align: center;\r\n    direction: rtl;\r\n    color: var(--font-color);\r\n    background: var(--book-bg);\r\n    border-radius: 20px;\r\n    box-shadow: var(--book-shadow);\r\n    border: 1px solid var(--book-border);\r\n    max-width: 90vw;\r\n  }\r\n  .input-group, .button-group {\r\n    display: flex;\r\n    margin: 1rem 0;\r\n    gap: 0.5rem;\r\n  }\r\n  input {\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  button {\r\n    padding: 0.5rem 1rem;\r\n    font-size: 1rem;\r\n    border: none;\r\n    background-color: var(--button-bg);\r\n    color: var(--button-text);\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    transition: all 0.2s ease;\r\n  }\r\n\r\n  button:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n  }\r\n\r\n  button:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n  }\r\n  button.secondary {\r\n    background-color: transparent;\r\n    color: var(--font-color);\r\n    border: 1px solid var(--button-bg);\r\n  }\r\n  .help-text {\r\n      font-size: 0.9rem;\r\n      color: #666;\r\n  }\r\n</style>\r\n","<script>\r\n  import { story } from './story.js';\r\n  import { theme } from './stores.js';\r\n  import Header from './Header.svelte';\r\n  import Chat from './Chat.svelte';\r\n  import { prompts } from './prompts.js';\r\n  import { onMount } from 'svelte';\r\n  import { autoAnimate } from '@formkit/auto-animate';\r\n  import ApiKeyPrompt from './ApiKeyPrompt.svelte';\r\n  import { characterName } from './config.js';\r\n\r\n  let apiKey = '';\r\n  let isApiKeyConfirmed = false;\r\n  let currentPage = 0;\r\n  let showChat = false;\r\n  let currentPrompt = {};\r\n\r\n  function handleApiKeySubmitted(event) {\r\n    apiKey = event.detail;\r\n    isApiKeyConfirmed = true;\r\n  }\r\n\r\n  function handleResetApiKey() {\r\n    apiKey = '';\r\n    isApiKeyConfirmed = false;\r\n    localStorage.removeItem('gemini-api-key');\r\n  }\r\n\r\n  function checkChat() {\r\n    const pageNumber = currentPage + 1;\r\n    if (pageNumber % 5 === 0 && pageNumber <= 50) {\r\n      const step = pageNumber / 5;\r\n      const promptData = prompts.find(p => p.step === step);\r\n      if (promptData) {\r\n        currentPrompt = promptData.prompt;\r\n        showChat = true;\r\n      }\r\n    } else {\r\n      showChat = false;\r\n    }\r\n  }\r\n\r\n  function nextPage() {\r\n    if (currentPage < story.length - 1) {\r\n      currentPage++;\r\n      checkChat();\r\n    }\r\n  }\r\n\r\n  function prevPage() {\r\n    if (currentPage > 0) {\r\n      currentPage--;\r\n      checkChat();\r\n    }\r\n  }\r\n\r\n  function handleEndChat() {\r\n    showChat = false;\r\n  }\r\n\r\n  function handleOverlayKeydown(event) {\r\n    if (event.key === 'Escape') {\r\n      handleEndChat();\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    const savedKey = localStorage.getItem('gemini-api-key');\r\n    if (savedKey) {\r\n      apiKey = savedKey;\r\n    }\r\n    checkChat();\r\n  });\r\n</script>\r\n\r\n<main class=\"dark\">\r\n  <Header />\r\n  <div class=\"content-wrapper\">\r\n    {#if !isApiKeyConfirmed}\r\n      <ApiKeyPrompt\r\n        storedApiKey={apiKey}\r\n        on:apiKeySubmitted={handleApiKeySubmitted}\r\n        on:resetApiKey={handleResetApiKey}\r\n      />\r\n    {:else}\r\n      <div class=\"book\" class:chat-active={showChat} use:autoAnimate>\r\n        <div class=\"page-content\">\r\n          <p>{story[currentPage].content}</p>\r\n        </div>\r\n\r\n        <div class=\"navigation\">\r\n          <button on:click={prevPage} disabled={currentPage === 0}>\r\n            قبلی\r\n          </button>\r\n          <span>صفحه {currentPage + 1} از {story.length}</span>\r\n          <button on:click={nextPage} disabled={currentPage === story.length - 1}>\r\n            بعدی\r\n          </button>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n\r\n  {#if showChat}\r\n    <div\r\n      class=\"chat-overlay\"\r\n      on:click|self={handleEndChat}\r\n      on:keydown={handleOverlayKeydown}\r\n      tabindex=\"0\"\r\n      role=\"button\"\r\n    >\r\n      <Chat {apiKey} {characterName} bind:prompt={currentPrompt} on:endChat={handleEndChat} />\r\n    </div>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    height: 100vh;\r\n    background-color: var(--bg-color);\r\n    transition: background-color 0.3s;\r\n    position: relative;\r\n    overflow: hidden; /* To hide the flying pages */\r\n  }\r\n\r\n  .content-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n\r\n\r\n  .book {\r\n    width: clamp(300px, 90vw, 1200px);\r\n    height: clamp(500px, 90vh, 800px);\r\n    background: var(--book-bg);\r\n    border-radius: 20px;\r\n    box-shadow: var(--book-shadow), var(--page-glow);\r\n    backdrop-filter: blur(5px);\r\n    -webkit-backdrop-filter: blur(5px);\r\n    border: 1px solid var(--book-border);\r\n    padding: clamp(1rem, 2vw, 2rem);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    transition: background 0.3s, box-shadow 0.3s, border 0.3s, filter 0.3s;\r\n    position: relative;\r\n  }\r\n\r\n  .book.chat-active {\r\n      filter: blur(4px);\r\n      pointer-events: none;\r\n  }\r\n\r\n  .page-content {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n    font-size: clamp(1rem, 1.5vw, 1.2rem);\r\n    line-height: 1.7;\r\n    color: var(--font-color);\r\n    transition: color 0.3s;\r\n    direction: rtl;\r\n    padding-right: 1rem; /* for scrollbar */\r\n  }\r\n\r\n  .chat-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0,0,0,0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n  }\r\n\r\n  .navigation {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid var(--book-border);\r\n    transition: border-top 0.3s;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  .navigation button {\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    background-color: var(--button-bg);\r\n    color: var(--button-text);\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .navigation button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n","export const characterName = 'شیرین';\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","destroy_block","lookup","key","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","story","page","content","header","FunctionsError","constructor","message","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionRegion","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","result","done","apply","FunctionsClient","url","headers","customFetch","region","Any","fetch","_fetch","args","browser","default","resolveFetch","setAuth","token","Authorization","invoke","functionName","_a","method","body","functionArgs","_headers","URL","searchParams","set","prototype","hasOwnProperty","Blob","ArrayBuffer","FormData","JSON","stringify","response","toString","assign","catch","fetchError","isRelayError","get","ok","responseType","split","trim","json","blob","formData","error","undefined","globalObject","self","window","global","getGlobal","nodeFetch","bind","Headers","Request","Response","defineProperty","PostgrestError_1","details","hint","code","PostgrestError$2","PostgrestError","__importDefault","mod","__esModule","PostgrestBuilder_1","node_fetch_1","require$$0","require$$1","PostgrestBuilder$2","builder","_b","shouldThrowOnError","schema","signal","isMaybeSingle","throwOnError","setHeader","onfulfilled","onrejected","includes","res","async","_c","_d","count","status","statusText","parse","countHeader","match","contentRange","parseInt","isArray","_e","stack","returns","overrideTypes","PostgrestTransformBuilder_1","PostgrestTransformBuilder$1","select","columns","quoted","cleanedColumns","test","join","order","column","ascending","nullsFirst","foreignTable","referencedTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","Boolean","forMediatype","rollback","maxAffected","PostgrestTransformBuilder$2","PostgrestTransformBuilder","PostgrestFilterBuilder_1","PostgrestFilterBuilder$1","eq","neq","gt","gte","lt","lte","like","pattern","likeAllOf","patterns","likeAnyOf","ilike","ilikeAllOf","ilikeAnyOf","is","values","cleanedValues","s","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","entries","not","operator","or","filters","PostgrestFilterBuilder$2","PostgrestFilterBuilder","PostgrestQueryBuilder_1","PostgrestQueryBuilder$2","head","defaultToNull","reduce","acc","x","concat","uniqueColumns","upsert","onConflict","ignoreDuplicates","PostgrestClient_1","PostgrestClient$2","PostgrestClient","schemaName","relation","rpc","_","cjs","PostgrestBuilder","PostgrestQueryBuilder","require$$2","require$$3","require$$4","require$$5","_default","WebSocketFactory","detectEnvironment","WebSocket","globalThis","WebSocketPair","workaround","EdgeRuntime","navigator","userAgent","process","processVersions","versionString","nodeVersion","replace","getWebSocketConstructor","env","errorMessage","createWebSocket","protocols","isWebSocketSupported","DEFAULT_TIMEOUT","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","PostgresTypes","Serializer","HEADER_LENGTH","decode","rawPayload","_binaryDecode","buffer","view","DataView","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","ref","payload","byteLength","Timer","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","setTimeout","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","isNaN","console","log","lastIdx","closeBrace","arr","valTrim","val","httpEndpointURL","socketUrl","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","send","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_on","_cancelTimeout","_matchReceive","trigger","_trigger","destroy","_off","h","REALTIME_PRESENCE_LISTEN_EVENTS","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimePresence","opts","state","pendingDiffs","joinRef","enabled","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","unshift","presenceRefsToRemove","func","getOwnPropertyNames","metas","presence","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","subTopic","broadcast","ack","private","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","broadcastEndpointURL","endPoint","subscribe","isConnected","connect","isPrivate","postgres_changes","presence_enabled","PRESENCE","accessTokenPayload","accessTokenValue","access_token","CHANNEL_ERROR","CLOSED","updateJoinPayload","_rejoin","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","SUBSCRIBED","TIMED_OUT","presenceState","track","untrack","on","_canPush","_push","endpoint_payload","apikey","apiKey","messages","_fetchWithTimeout","cancel","leaving","onClose","close","leavePush","leave","finally","teardown","controller","AbortController","abort","_addToPushBuffer","removedPush","shift","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","_leaveOpenTopic","records","Transformers.convertChangeData","old_record","CONNECTION_TIMEOUTS","RECONNECT_INTERVALS","RealtimeClient","channels","httpEndpoint","transport","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","heartbeatCallback","reconnectTimer","logger","conn","sendBuffer","serializer","stateChangeCallbacks","open","accessToken","_connectionState","_wasManualDisconnect","_authPromise","_resolveFetch","websocket","_initializeOptions","_setupReconnectionTimer","isConnecting","isDisconnecting","_setConnectionState","_setAuthSafely","endpointURL","_setupConnectionHandlers","_appendParams","vsn","disconnect","fallbackTimer","onclose","_teardownConnection","getChannels","removeChannel","removeAllChannels","values_1","all","kind","msg","connectionState","readyState","connecting","Connecting","Open","closing","Closing","Closed","realtimeTopic","exists","chan","encode","_performAuth","sendHeartbeat","onHeartbeat","flushSendBuffer","newRef","dupChannel","_onConnMessage","rawMessage","refString","_triggerStateCallbacks","_clearTimer","clearInterval","_clearAllTimers","binaryType","onopen","_onConnOpen","onerror","_onConnError","onmessage","_onConnClose","worker","workerRef","_startWorkerHeartbeat","_startHeartbeat","setInterval","workerUrl","objectUrl","_workerObjectUrl","Worker","terminate","postMessage","interval","_triggerChanError","prefix","URLSearchParams","result_url","createObjectURL","manual","tokenToSend","version","_waitForAuthIfNeeded","_g","_h","_j","logLevel","log_level","StorageError","__isStorageError","isStorageError","StorageApiError","statusCode","toJSON","StorageUnknownError","originalError","recursiveToCamel","item","el","newKey","toUpperCase","_getErrorMessage","err","error_description","handleError","Res","noResolveJson","_getRequestParams","parameters","getPrototypeOf","Symbol","toStringTag","iterator","isPlainObject","duplex","_handleRequest","fetcher","post","put","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","String","metadata","encodeMetadata","toBase64","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Id","fullPath","Key","upload","uploadToSignedUrl","createSignedUploadUrl","signedUrl","move","fromPath","toPath","sourceKey","destinationKey","destinationBucket","copy","createSignedUrl","expiresIn","transform","downloadQueryParam","download","encodeURI","signedURL","createSignedUrls","paths","datum","renderPath","transformationQuery","transformOptsToQueryString","queryString","info","getPublicUrl","_queryString","publicUrl","prefixes","list","listV2","Buffer","btoa","width","height","resize","quality","DEFAULT_HEADERS","StorageBucketApi","baseUrl","useNewHostname","hostname","href","listBuckets","getBucket","createBucket","public","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","emptyBucket","deleteBucket","StorageClient","JS_ENV","Deno","product","DEFAULT_GLOBAL_OPTIONS","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","flowType","DEFAULT_REALTIME_OPTIONS","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","NodeFetchHeaders","AUTO_REFRESH_TICK_DURATION_MS","EXPIRY_MARGIN_MS","AUTO_REFRESH_TICK_THRESHOLD","API_VERSION_HEADER_NAME","API_VERSIONS","Date","BASE64URL_REGEX","AuthError","__isAuthError","isAuthError","AuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidTokenResponseError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","isAuthRetryableFetchError","AuthWeakPasswordError","reasons","AuthInvalidJwtError","TO_BASE64URL","IGNORE_BASE64URL","FROM_BASE64URL","charMap","charCodeAt","byteToBase64URL","byte","emit","queue","queuedBits","pos","byteFromBase64URL","charCode","bits","fromCharCode","stringFromBase64URL","str","conv","utf8Emit","codepoint","fromCodePoint","utf8State","utf8seq","b64State","byteEmit","leadingBit","stringFromUTF8","codepointToUTF8","base64UrlToUint8Array","onByte","Uint8Array","stringToUint8Array","highSurrogate","stringToUTF8","bytesToBase64URL","bytes","onChar","char","isBrowser","localStorageWriteTests","tested","writable","supportsLocalStorage","localStorage","randomKey","Math","random","setItem","removeItem","setItemAsync","storage","getItemAsync","getItem","removeItemAsync","Deferred","promise","promiseConstructor","rej","decodeJWT","parts","signature","raw","dec2hex","dec","substr","generatePKCEChallenge","verifier","crypto","subtle","TextEncoder","warn","hashed","randomString","encodedData","hash","digest","sha256","getCodeChallengeAndMethod","storageKey","isPasswordRecovery","codeVerifier","array","Uint32Array","charSet","charSetLen","floor","getRandomValues","generatePKCEVerifier","storedCodeVerifier","codeChallenge","API_VERSION_REGEX","UUID_REGEX","validateUUID","userNotAvailableProxy","Proxy","prop","sProp","_target","deleteProperty","deepClone","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","NETWORK_ERROR_CODES","maybeResponse","errorCode","responseAPIVersion","apiVersion","parseResponseAPIVersion","getTime","error_code","weak_password","_request","jwt","qs","redirectTo","requestParams","xform","_sessionResponse","session","refresh_token","expires_in","hasSession","expires_at","round","now","user","_sessionResponsePassword","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","properties","_noResolveJsonResponse","SIGN_OUT_SCOPES","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","scope","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","pagination","nextPage","lastPage","total","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","memoryLocalStorageAdapter","store","internals","LockAcquireTimeoutError","isAcquireTimeout","NavigatorLockAcquireTimeoutError","navigatorLock","acquireTimeout","abortController","locks","request","mode","ifAvailable","lock","configurable","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","debug","hasCustomAuthorizationHeader","lockNoOp","GLOBAL_JWKS","GoTrueClient","userStorage","memoryStorage","stateChangeEmitters","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","suppressGetSessionWarning","lockAcquired","pendingInLock","broadcastChannel","instanceID","nextInstanceID","logDebugMessages","admin","jwks","jwks_cached_at","MIN_SAFE_INTEGER","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","_debug","_notifyAllSubscribers","initialize","cachedAt","toISOString","_acquireLock","_initialize","parseParametersFromURL","location","callbackUrlType","_isImplicitGrantCallback","_isPKCECallback","_getSessionFromURL","isAuthImplicitGrantRedirectError","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signInAnonymously","credentials","gotrue_meta_security","captcha_token","captchaToken","signUp","password","codeChallengeMethod","emailRedirectTo","code_challenge","code_challenge_method","phone","signInWithPassword","weakPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","_exchangeCodeForSession","signInWithWeb3","chain","signInWithSolana","_k","_l","_m","wallet","statement","resolvedWallet","windowAny","solana","signIn","signMessage","output","issuedAt","domain","host","uri","outputToProcess","signedMessage","publicKey","toBase58","notBefore","expirationTime","chainId","nonce","requestId","resources","resource","maybeSignature","storageItem","auth_code","code_verifier","signInWithIdToken","id_token","signInWithOtp","create_user","shouldCreateUser","messageId","message_id","verifyOtp","signInWithSSO","provider_id","providerId","skip_http_redirect","reauthenticate","_reauthenticate","_useSession","sessionError","endpoint","getSession","last","waitOn","__loadSession","currentSession","maybeSession","_isValidSession","hasExpired","maybeUser","isServer","suppressWarning","proxySession","receiver","Reflect","_callRefreshToken","getUser","_getUser","isAuthSessionMissingError","updateUser","_updateUser","sessionData","userError","setSession","_setSession","timeNow","expiresAt","exp","refreshedSession","token_type","refreshSession","_refreshSession","history","replaceState","provider_token","provider_refresh_token","actuallyExpiresIn","currentStorageContent","_signOut","isAuthApiError","onAuthStateChange","subscription","_emitInitialSession","resetPasswordForEmail","getUserIdentities","identities","linkIdentity","_getUrlForProvider","unlinkIdentity","identity","identity_id","_refreshAccessToken","refreshToken","debugName","startedAt","attempt","accept","sleep","pow","isRetryable","nextBackOffInterval","Infinity","separateUser","expiresWithMargin","__isUserNotAvailableProxy","getUserError","promises","sessionToProcess","userIsProxy","mainSessionData","clonedMainSessionData","clonedSession","_removeVisibilityChangedCallback","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","unrefTimer","startAutoRefresh","stopAutoRefresh","expiresInTicks","_onVisibilityChanged","calledFromInitialize","methodName","visibilityState","urlParams","encodeURIComponent","flowParams","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","amr","fetchJwk","kid","jwk","getClaims","rawHeader","allowExpired","validateExp","signingKey","alg","startsWith","claims","algorithm","namedCurve","getAlgorithm","importKey","AuthClient","SupabaseAuthClient","SupabaseClient","supabaseUrl","trimmedUrl","endsWith","validateSupabaseUrl","realtimeUrl","protocol","authUrl","storageUrl","functionsUrl","defaultStorageKey","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","globalOptions","applySettingDefaults","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","SupabaseStorageClient","_listenForAuthEvents","functions","authHeaders","some","toLowerCase","_handleTokenChanged","source","changedAccessToken","processVersion","versionMatch","shouldShowDeprecationWarning","supabase","createClient","t_value","div","div_class_value","role","create_if_block_1","create_if_block","disabled","input_disabled_value","MAX_MESSAGES","button2","button2_disabled_value","div4","div1","h3","div0","button0","button1","div2","div3","svg","line","polygon","old_blocks","get_key","dynamic","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","prompt","characterName","dispatch","userInput","loading","sendMessage","userMessage","conversationHistory","$$invalidate","funcError","assistantResponse","startingConversationMatch","startingLine","prompts","parents","coords","WeakMap","siblings","animations","intersections","mutationObservers","intervals","debounces","WeakSet","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","observedNodes","mutation","addedNodes","removedNodes","every","nodeName","Element","child","previousSibling","nextSibling","getElements","isMounted","preExisting","playState","oldCoords","newCoords","getCoords","isEnabled","isOffscreen","observePosition","animation","pluginOrOptions","getOptions","deltaLeft","left","deltaTop","top","deltaRight","widthFrom","widthTo","heightFrom","heightTo","getTransitionSizes","start","end","animate","duration","easing","keyframes","getPluginTuple","Animation","play","updatePos","once","remain","prev","finalX","finalY","getTarget","cleanUp","offsetParent","parentElement","getComputedStyle","position","HTMLBodyElement","parentStyles","parentCoords","borderTopWidth","borderLeftWidth","deletePosition","optionsOrPlugin","scrollDeltaX","scrollDeltaY","scrollBefore","documentElement","style","scrollBehavior","scrollTo","parent","lastHeight","clientHeight","lastWidth","clientWidth","startScroll","performance","smoothScroll","requestAnimationFrame","isPlugin","deltaY","deltaX","adjustScroll","styleReset","margin","pointerEvents","transformOrigin","zIndex","opacity","handleResizes","entry","lowPriority","rect","getBoundingClientRect","vw","vh","bottom","right","oldObserver","invocations","offsetWidth","offsetHeight","rootMargin","px","observer","IntersectionObserver","threshold","observe","debounce","delay","currentAnimation","finished","poll","requestIdleCallback","supportedBrowser","y","scrollLeft","scrollTop","getScrollOffset","styles","getPropertyValue","paddingY","paddingTop","paddingBottom","borderBottomWidth","paddingX","paddingLeft","paddingRight","borderRightWidth","pluginReturn","HTMLElement","autoAnimate","matchMedia","matches","disrespectUserMotionPreference","mo","MutationObserver","childList","freeze","enable","disable","unobserve","io","h2","p0","button","p1","storedApiKey","apiKeyInput","submitKey","ResizeObserver","t5_value","t7_value","button0_disabled_value","button1_disabled_value","action_result","span","t0","t0_value","t5","main","isApiKeyConfirmed","currentPage","showChat","currentPrompt","checkChat","pageNumber","promptData","handleEndChat","savedKey","app"],"mappings":"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","x_google_ignoreList":[0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55]}